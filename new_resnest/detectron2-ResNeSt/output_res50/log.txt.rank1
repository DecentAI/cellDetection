[01/11 15:18:58] detectron2 INFO: Rank of current process: 1. World size: 8
[01/11 15:18:59] detectron2 INFO: Environment info:
------------------------  ---------------------------------------------------------------------------------------------
sys.platform              linux
Python                    3.10.8 (main, Nov 24 2022, 14:13:03) [GCC 11.2.0]
numpy                     1.23.5
detectron2                0.1.1 @/lunit/home/stevekang/decentAI/cellDetection/new_resnest/detectron2-ResNeSt/detectron2
detectron2 compiler       GCC 5.4
detectron2 CUDA compiler  10.1
detectron2 arch flags     sm_61
DETECTRON2_ENV_MODULE     <not set>
PyTorch                   1.12.0+cu102 @/home/stevekang/anaconda3/envs/resnest/lib/python3.10/site-packages/torch
PyTorch debug build       False
CUDA available            True
GPU 0,1,2,3,4,5,6,7       TITAN Xp
CUDA_HOME                 /usr/local/cuda
NVCC                      Cuda compilation tools, release 10.1, V10.1.243
Pillow                    9.3.0
torchvision               0.13.0+cu102 @/home/stevekang/anaconda3/envs/resnest/lib/python3.10/site-packages/torchvision
torchvision arch flags    sm_35, sm_50, sm_60, sm_70, sm_75
cv2                       4.6.0
------------------------  ---------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[01/11 15:18:59] detectron2 INFO: Command line arguments: Namespace(config_file='tools/mcf.yaml', resume=False, eval_only=False, num_gpus=8, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:51261', opts=[])
[01/11 15:18:59] detectron2 INFO: Contents of args.config_file=tools/mcf.yaml:
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHTS: "https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth"
  BACKBONE:
    NAME: "build_resnet_fpn_backbone"
    FREEZE_AT: 0
  MASK_ON: True
  RESNETS:
    OUT_FEATURES: ["res2", "res3", "res4", "res5"]
    DEPTH: 200
    STRIDE_IN_1X1: False
    RADIX: 2
    DEFORM_ON_PER_STAGE: [False, True, True, True] # on Res3,Res4,Res5
    DEFORM_MODULATED: True
    DEFORM_NUM_GROUPS: 2
    NORM: "SyncBN"

  FPN:
    NORM: "SyncBN"
    IN_FEATURES: ["res2", "res3", "res4", "res5"]
  ANCHOR_GENERATOR:
    SIZES: [[4], [9], [17], [31], [64], [127]]  # One size for each in feature map
    ASPECT_RATIOS: [[0.25, 0.5, 1.0, 2.0, 4.0]]  # Three aspect ratios (same for all in feature maps)
  ROI_HEADS:
    NUM_CLASSES: 1
    BATCH_SIZE_PER_IMAGE: 512
    NAME: CascadeROIHeads
    IN_FEATURES: ["p2", "p3", "p4", "p5"]
  ROI_BOX_HEAD:
    NAME: "FastRCNNConvFCHead"
    NUM_CONV: 4
    NUM_FC: 1
    NORM: "SyncBN"
    POOLER_RESOLUTION: 7
    CLS_AGNOSTIC_BBOX_REG: True
  ROI_MASK_HEAD:
    NUM_CONV: 8
    NORM: "SyncBN"
  RPN:
    IN_FEATURES: ["p2" ,"p2", "p3", "p4", "p5", "p6"]
    BATCH_SIZE_PER_IMAGE: 256
    POST_NMS_TOPK_TEST: 3000
    POST_NMS_TOPK_TRAIN: 3000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
  RETINANET:
    NUM_CLASSES: 1
    TOPK_CANDIDATES_TEST: 3000
  PIXEL_MEAN: [128, 128, 128]
  PIXEL_STD: [11.578, 11.578, 11.578]
SOLVER:
  IMS_PER_BATCH: 16
  BASE_LR: 0.02
  STEPS: (17500, 20000)
  MAX_ITER: 30000
  CHECKPOINT_PERIOD: 500
DATASETS:
  TRAIN: ("MCF7",)  #REPLACE TRAIN WITH THE REGISTERED NAME 
  TEST: ("MCF7",)    #REPLACE TRAIN WITH THE REGISTERED NAME
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
INPUT:
  MIN_SIZE_TRAIN: (440, 480, 520, 560, 580, 620)

  CROP:
    ENABLED: False
  FORMAT: "BGR"
TEST:
  DETECTIONS_PER_IMAGE: 3000 # 1000
  EVAL_PERIOD: 500
  PRECISE_BN:
    ENABLED: False
  AUG:
    ENABLED: False
OUTPUT_DIR: "./output" # PATH TO SAVE THE OUTPUT RESULTS
DATALOADER:
  NUM_WORKERS: 8
VERSION: 2
[01/11 15:18:59] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 8
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('MCF7',)
  TRAIN: ('MCF7',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (440, 480, 520, 560, 580, 620)
  MIN_SIZE_TRAIN_SAMPLING: choice
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.25, 0.5, 1.0, 2.0, 4.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[4], [9], [17], [31], [64], [127]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: SyncBN
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [128, 128, 128]
  PIXEL_STD: [11.578, 11.578, 11.578]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    AVD: False
    AVG_DOWN: False
    BOTTLENECK_WIDTH: 64
    DEEP_STEM: False
    DEFORM_MODULATED: True
    DEFORM_NUM_GROUPS: 2
    DEFORM_ON_PER_STAGE: [False, True, True, True]
    DEPTH: 200
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RADIX: 2
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 3000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: True
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: SyncBN
    NUM_CONV: 4
    NUM_FC: 1
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: CascadeROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: SyncBN
    NUM_CONV: 8
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 3000
    POST_NMS_TOPK_TRAIN: 3000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 500
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 30000
  MOMENTUM: 0.9
  STEPS: (17500, 20000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 3000
  EVAL_PERIOD: 500
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/11 15:18:59] detectron2.utils.env INFO: Using a generated random seed 59322437
[01/11 15:19:05] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(
      256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output2): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral3): Conv2d(
      512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output3): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral4): Conv2d(
      1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output4): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral5): Conv2d(
      2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output5): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1_1): Conv2d(
          3, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1_2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1_3): Conv2d(
          64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=1, stride=1, padding=0)
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (4): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (5): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (6): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (7): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (8): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (9): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (10): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (11): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (12): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (13): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (14): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (15): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (16): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (17): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (18): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (19): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (20): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (21): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (22): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (23): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res4): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (4): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (5): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (6): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (7): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (8): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (9): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (10): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (11): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (12): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (13): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (14): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (15): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (16): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (17): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (18): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (19): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (20): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (21): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (22): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (23): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (24): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (25): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (26): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (27): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (28): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (29): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (30): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (31): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (32): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (33): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (34): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (35): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 5, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (roi_heads): CascadeROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): ModuleList(
      (0): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
      (1): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
      (2): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
    )
    (box_predictor): ModuleList(
      (0): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
      (1): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
      (2): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn5): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn6): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn7): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn8): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[01/11 15:19:08] detectron2.data.datasets.coco INFO: Loading /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json takes 3.42 seconds.
[01/11 15:19:09] detectron2.data.datasets.coco INFO: Loaded 469 images in COCO format from /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json
[01/11 15:19:09] detectron2.data.build INFO: Removed 0 images with no usable annotations. 469 images left.
[01/11 15:19:10] detectron2.data.build INFO: Distribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|    cell    | 212688       |
|            |              |[0m
[01/11 15:19:10] detectron2.data.common INFO: Serializing 469 elements to byte tensors and concatenating them all ...
[01/11 15:19:10] detectron2.data.common INFO: Serialized dataset takes 77.04 MiB
[01/11 15:19:10] detectron2.data.detection_utils INFO: TransformGens used in training: [ResizeShortestEdge(short_edge_length=(440, 480, 520, 560, 580, 620), max_size=1333, sample_style='choice'), RandomFlip()]
[01/11 15:19:10] detectron2.data.build INFO: Using training sampler TrainingSampler
[01/11 15:19:11] fvcore.common.checkpoint INFO: Loading checkpoint from https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
[01/11 15:19:11] fvcore.common.file_io INFO: URL https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth cached in /home/stevekang/.torch/fvcore_cache/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
[01/11 15:19:13] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.0' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 15:19:13] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.1' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 15:19:13] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.2' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 15:19:13] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.3' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 15:19:13] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.4' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 15:19:13] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.objectness_logits.weight' has shape (3, 256, 1, 1) in the checkpoint but (5, 256, 1, 1) in the model! Skipped.
[01/11 15:19:13] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.objectness_logits.bias' has shape (3,) in the checkpoint but (5,) in the model! Skipped.
[01/11 15:19:13] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.anchor_deltas.weight' has shape (12, 256, 1, 1) in the checkpoint but (20, 256, 1, 1) in the model! Skipped.
[01/11 15:19:13] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.anchor_deltas.bias' has shape (12,) in the checkpoint but (20,) in the model! Skipped.
[01/11 15:19:13] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.0.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 15:19:13] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.0.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 15:19:13] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.1.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 15:19:13] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.1.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 15:19:13] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.2.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 15:19:13] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.2.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 15:19:13] fvcore.common.checkpoint WARNING: 'roi_heads.mask_head.predictor.weight' has shape (80, 256, 1, 1) in the checkpoint but (1, 256, 1, 1) in the model! Skipped.
[01/11 15:19:13] fvcore.common.checkpoint WARNING: 'roi_heads.mask_head.predictor.bias' has shape (80,) in the checkpoint but (1,) in the model! Skipped.
[01/11 15:19:14] fvcore.common.checkpoint INFO: Some model parameters are not in the checkpoint:
  [34mroi_heads.box_predictor.1.cls_score.{weight, bias}[0m
  [34mroi_heads.box_predictor.0.cls_score.{bias, weight}[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{3, 5, 4, 0, 1, 2}[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
  [34mbackbone.bottom_up.stem.conv1_3.norm.num_batches_tracked[0m
  [34mroi_heads.box_predictor.2.cls_score.{weight, bias}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv2.bn1.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.2.conv2.bn0.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.2.conv2.bn1.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.2.conv3.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.conv2.bn0.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.2.conv1.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.1.conv3.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.stem.conv1_1.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.1.conv2.bn1.num_batches_tracked[0m
  [34mbackbone.bottom_up.stem.conv1_2.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.1.conv2.bn0.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.conv3.norm.num_batches_tracked[0m
  [34mroi_heads.mask_head.predictor.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.shortcut.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.num_batches_tracked[0m
[01/11 15:19:14] detectron2.engine.train_loop INFO: Starting training from iteration 0
[01/11 15:19:45] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f8aea66c790> to CPU due to CUDA OOM
[01/11 15:19:51] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f8aea66c790> to CPU due to CUDA OOM
[01/11 15:21:29] detectron2 INFO: Rank of current process: 1. World size: 8
[01/11 15:21:30] detectron2 INFO: Environment info:
------------------------  ---------------------------------------------------------------------------------------------
sys.platform              linux
Python                    3.10.8 (main, Nov 24 2022, 14:13:03) [GCC 11.2.0]
numpy                     1.23.5
detectron2                0.1.1 @/lunit/home/stevekang/decentAI/cellDetection/new_resnest/detectron2-ResNeSt/detectron2
detectron2 compiler       GCC 5.4
detectron2 CUDA compiler  10.1
detectron2 arch flags     sm_61
DETECTRON2_ENV_MODULE     <not set>
PyTorch                   1.12.0+cu102 @/home/stevekang/anaconda3/envs/resnest/lib/python3.10/site-packages/torch
PyTorch debug build       False
CUDA available            True
GPU 0,1,2,3,4,5,6,7       TITAN Xp
CUDA_HOME                 /usr/local/cuda
NVCC                      Cuda compilation tools, release 10.1, V10.1.243
Pillow                    9.3.0
torchvision               0.13.0+cu102 @/home/stevekang/anaconda3/envs/resnest/lib/python3.10/site-packages/torchvision
torchvision arch flags    sm_35, sm_50, sm_60, sm_70, sm_75
cv2                       4.6.0
------------------------  ---------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[01/11 15:21:30] detectron2 INFO: Command line arguments: Namespace(config_file='tools/mcf.yaml', resume=False, eval_only=False, num_gpus=8, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:51261', opts=[])
[01/11 15:21:30] detectron2 INFO: Contents of args.config_file=tools/mcf.yaml:
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHTS: "https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth"
  BACKBONE:
    NAME: "build_resnet_fpn_backbone"
    FREEZE_AT: 0
  MASK_ON: True
  RESNETS:
    OUT_FEATURES: ["res2", "res3", "res4", "res5"]
    DEPTH: 200
    STRIDE_IN_1X1: False
    RADIX: 2
    DEFORM_ON_PER_STAGE: [False, True, True, True] # on Res3,Res4,Res5
    DEFORM_MODULATED: True
    DEFORM_NUM_GROUPS: 2
    NORM: "SyncBN"

  FPN:
    NORM: "SyncBN"
    IN_FEATURES: ["res2", "res3", "res4", "res5"]
  ANCHOR_GENERATOR:
    SIZES: [[4], [9], [17], [31], [64], [127]]  # One size for each in feature map
    ASPECT_RATIOS: [[0.25, 0.5, 1.0, 2.0, 4.0]]  # Three aspect ratios (same for all in feature maps)
  ROI_HEADS:
    NUM_CLASSES: 1
    BATCH_SIZE_PER_IMAGE: 512
    NAME: CascadeROIHeads
    IN_FEATURES: ["p2", "p3", "p4", "p5"]
  ROI_BOX_HEAD:
    NAME: "FastRCNNConvFCHead"
    NUM_CONV: 4
    NUM_FC: 1
    NORM: "SyncBN"
    POOLER_RESOLUTION: 7
    CLS_AGNOSTIC_BBOX_REG: True
  ROI_MASK_HEAD:
    NUM_CONV: 8
    NORM: "SyncBN"
  RPN:
    IN_FEATURES: ["p2" ,"p2", "p3", "p4", "p5", "p6"]
    BATCH_SIZE_PER_IMAGE: 256
    POST_NMS_TOPK_TEST: 3000
    POST_NMS_TOPK_TRAIN: 3000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
  RETINANET:
    NUM_CLASSES: 1
    TOPK_CANDIDATES_TEST: 3000
  PIXEL_MEAN: [128, 128, 128]
  PIXEL_STD: [11.578, 11.578, 11.578]
SOLVER:
  IMS_PER_BATCH: 8
  BASE_LR: 0.02
  STEPS: (17500, 20000)
  MAX_ITER: 30000
  CHECKPOINT_PERIOD: 500
DATASETS:
  TRAIN: ("MCF7",)  #REPLACE TRAIN WITH THE REGISTERED NAME 
  TEST: ("MCF7",)    #REPLACE TRAIN WITH THE REGISTERED NAME
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
INPUT:
  MIN_SIZE_TRAIN: (440, 480, 520, 560, 580, 620)

  CROP:
    ENABLED: False
  FORMAT: "BGR"
TEST:
  DETECTIONS_PER_IMAGE: 3000 # 1000
  EVAL_PERIOD: 500
  PRECISE_BN:
    ENABLED: False
  AUG:
    ENABLED: False
OUTPUT_DIR: "./output" # PATH TO SAVE THE OUTPUT RESULTS
DATALOADER:
  NUM_WORKERS: 8
VERSION: 2
[01/11 15:21:30] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 8
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('MCF7',)
  TRAIN: ('MCF7',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (440, 480, 520, 560, 580, 620)
  MIN_SIZE_TRAIN_SAMPLING: choice
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.25, 0.5, 1.0, 2.0, 4.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[4], [9], [17], [31], [64], [127]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: SyncBN
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [128, 128, 128]
  PIXEL_STD: [11.578, 11.578, 11.578]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    AVD: False
    AVG_DOWN: False
    BOTTLENECK_WIDTH: 64
    DEEP_STEM: False
    DEFORM_MODULATED: True
    DEFORM_NUM_GROUPS: 2
    DEFORM_ON_PER_STAGE: [False, True, True, True]
    DEPTH: 200
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RADIX: 2
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 3000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: True
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: SyncBN
    NUM_CONV: 4
    NUM_FC: 1
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: CascadeROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: SyncBN
    NUM_CONV: 8
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 3000
    POST_NMS_TOPK_TRAIN: 3000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 500
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 30000
  MOMENTUM: 0.9
  STEPS: (17500, 20000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 3000
  EVAL_PERIOD: 500
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/11 15:21:30] detectron2.utils.env INFO: Using a generated random seed 30408147
[01/11 15:21:36] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(
      256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output2): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral3): Conv2d(
      512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output3): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral4): Conv2d(
      1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output4): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral5): Conv2d(
      2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output5): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (dropout): Dropout(p=0.3, inplace=False)
        (conv1_1): Conv2d(
          3, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1_2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1_3): Conv2d(
          64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=1, stride=1, padding=0)
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (4): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (5): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (6): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (7): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (8): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (9): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (10): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (11): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (12): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (13): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (14): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (15): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (16): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (17): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (18): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (19): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (20): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (21): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (22): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (23): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res4): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (4): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (5): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (6): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (7): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (8): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (9): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (10): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (11): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (12): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (13): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (14): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (15): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (16): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (17): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (18): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (19): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (20): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (21): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (22): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (23): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (24): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (25): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (26): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (27): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (28): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (29): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (30): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (31): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (32): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (33): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (34): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (35): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 5, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (roi_heads): CascadeROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): ModuleList(
      (0): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
      (1): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
      (2): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
    )
    (box_predictor): ModuleList(
      (0): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
      (1): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
      (2): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn5): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn6): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn7): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn8): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[01/11 15:21:40] detectron2.data.datasets.coco INFO: Loading /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json takes 3.62 seconds.
[01/11 15:21:40] detectron2.data.datasets.coco INFO: Loaded 469 images in COCO format from /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json
[01/11 15:21:41] detectron2.data.build INFO: Removed 0 images with no usable annotations. 469 images left.
[01/11 15:21:41] detectron2.data.build INFO: Distribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|    cell    | 212688       |
|            |              |[0m
[01/11 15:21:41] detectron2.data.common INFO: Serializing 469 elements to byte tensors and concatenating them all ...
[01/11 15:21:41] detectron2.data.common INFO: Serialized dataset takes 77.04 MiB
[01/11 15:21:41] detectron2.data.detection_utils INFO: TransformGens used in training: [ResizeShortestEdge(short_edge_length=(440, 480, 520, 560, 580, 620), max_size=1333, sample_style='choice'), RandomFlip()]
[01/11 15:21:41] detectron2.data.build INFO: Using training sampler TrainingSampler
[01/11 15:21:42] fvcore.common.checkpoint INFO: Loading checkpoint from https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
[01/11 15:21:42] fvcore.common.file_io INFO: URL https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth cached in /home/stevekang/.torch/fvcore_cache/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
[01/11 15:21:43] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.0' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 15:21:43] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.1' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 15:21:43] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.2' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 15:21:43] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.3' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 15:21:43] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.4' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 15:21:43] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.objectness_logits.weight' has shape (3, 256, 1, 1) in the checkpoint but (5, 256, 1, 1) in the model! Skipped.
[01/11 15:21:43] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.objectness_logits.bias' has shape (3,) in the checkpoint but (5,) in the model! Skipped.
[01/11 15:21:43] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.anchor_deltas.weight' has shape (12, 256, 1, 1) in the checkpoint but (20, 256, 1, 1) in the model! Skipped.
[01/11 15:21:43] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.anchor_deltas.bias' has shape (12,) in the checkpoint but (20,) in the model! Skipped.
[01/11 15:21:43] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.0.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 15:21:43] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.0.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 15:21:43] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.1.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 15:21:43] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.1.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 15:21:43] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.2.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 15:21:43] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.2.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 15:21:43] fvcore.common.checkpoint WARNING: 'roi_heads.mask_head.predictor.weight' has shape (80, 256, 1, 1) in the checkpoint but (1, 256, 1, 1) in the model! Skipped.
[01/11 15:21:43] fvcore.common.checkpoint WARNING: 'roi_heads.mask_head.predictor.bias' has shape (80,) in the checkpoint but (1,) in the model! Skipped.
[01/11 15:21:43] fvcore.common.checkpoint INFO: Some model parameters are not in the checkpoint:
  [34mbackbone.bottom_up.res2.1.conv2.bn0.num_batches_tracked[0m
  [34mroi_heads.box_predictor.0.cls_score.{weight, bias}[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{0, 5, 2, 4, 1, 3}[0m
  [34mbackbone.bottom_up.res2.1.conv2.bn1.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.1.conv3.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.num_batches_tracked[0m
  [34mroi_heads.mask_head.predictor.{weight, bias}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{weight, bias}[0m
  [34mroi_heads.box_predictor.1.cls_score.{weight, bias}[0m
  [34mbackbone.bottom_up.stem.conv1_2.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.2.conv1.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.shortcut.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.conv2.bn0.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.2.conv2.bn0.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.conv2.bn1.num_batches_tracked[0m
  [34mbackbone.bottom_up.stem.conv1_1.norm.num_batches_tracked[0m
  [34mroi_heads.box_predictor.2.cls_score.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.2.conv3.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.stem.conv1_3.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.conv3.norm.num_batches_tracked[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.2.conv2.bn1.num_batches_tracked[0m
[01/11 15:21:43] detectron2.engine.train_loop INFO: Starting training from iteration 0
[01/11 15:22:01] detectron2.engine.hooks INFO: Total training time: 0:00:17 (0:00:00 on hooks)
[01/11 15:23:07] detectron2 INFO: Rank of current process: 1. World size: 8
[01/11 15:23:08] detectron2 INFO: Environment info:
------------------------  ---------------------------------------------------------------------------------------------
sys.platform              linux
Python                    3.10.8 (main, Nov 24 2022, 14:13:03) [GCC 11.2.0]
numpy                     1.23.5
detectron2                0.1.1 @/lunit/home/stevekang/decentAI/cellDetection/new_resnest/detectron2-ResNeSt/detectron2
detectron2 compiler       GCC 5.4
detectron2 CUDA compiler  10.1
detectron2 arch flags     sm_61
DETECTRON2_ENV_MODULE     <not set>
PyTorch                   1.12.0+cu102 @/home/stevekang/anaconda3/envs/resnest/lib/python3.10/site-packages/torch
PyTorch debug build       False
CUDA available            True
GPU 0,1,2,3,4,5,6,7       TITAN Xp
CUDA_HOME                 /usr/local/cuda
NVCC                      Cuda compilation tools, release 10.1, V10.1.243
Pillow                    9.3.0
torchvision               0.13.0+cu102 @/home/stevekang/anaconda3/envs/resnest/lib/python3.10/site-packages/torchvision
torchvision arch flags    sm_35, sm_50, sm_60, sm_70, sm_75
cv2                       4.6.0
------------------------  ---------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[01/11 15:23:08] detectron2 INFO: Command line arguments: Namespace(config_file='tools/mcf.yaml', resume=False, eval_only=False, num_gpus=8, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:51261', opts=[])
[01/11 15:23:08] detectron2 INFO: Contents of args.config_file=tools/mcf.yaml:
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHTS: "https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth"
  BACKBONE:
    NAME: "build_resnet_fpn_backbone"
    FREEZE_AT: 0
  MASK_ON: True
  RESNETS:
    OUT_FEATURES: ["res2", "res3", "res4", "res5"]
    DEPTH: 200
    STRIDE_IN_1X1: False
    RADIX: 2
    DEFORM_ON_PER_STAGE: [False, True, True, True] # on Res3,Res4,Res5
    DEFORM_MODULATED: True
    DEFORM_NUM_GROUPS: 2
    NORM: "SyncBN"

  FPN:
    NORM: "SyncBN"
    IN_FEATURES: ["res2", "res3", "res4", "res5"]
  ANCHOR_GENERATOR:
    SIZES: [[4], [9], [17], [31], [64], [127]]  # One size for each in feature map
    ASPECT_RATIOS: [[0.25, 0.5, 1.0, 2.0, 4.0]]  # Three aspect ratios (same for all in feature maps)
  ROI_HEADS:
    NUM_CLASSES: 1
    BATCH_SIZE_PER_IMAGE: 512
    NAME: CascadeROIHeads
    IN_FEATURES: ["p2", "p3", "p4", "p5"]
  ROI_BOX_HEAD:
    NAME: "FastRCNNConvFCHead"
    NUM_CONV: 4
    NUM_FC: 1
    NORM: "SyncBN"
    POOLER_RESOLUTION: 7
    CLS_AGNOSTIC_BBOX_REG: True
  ROI_MASK_HEAD:
    NUM_CONV: 8
    NORM: "SyncBN"
  RPN:
    IN_FEATURES: ["p2" ,"p2", "p3", "p4", "p5", "p6"]
    BATCH_SIZE_PER_IMAGE: 256
    POST_NMS_TOPK_TEST: 3000
    POST_NMS_TOPK_TRAIN: 3000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
  RETINANET:
    NUM_CLASSES: 1
    TOPK_CANDIDATES_TEST: 3000
  PIXEL_MEAN: [128, 128, 128]
  PIXEL_STD: [11.578, 11.578, 11.578]
SOLVER:
  IMS_PER_BATCH: 8
  BASE_LR: 0.02
  STEPS: (17500, 20000)
  MAX_ITER: 30000
  CHECKPOINT_PERIOD: 500
DATASETS:
  TRAIN: ("MCF7",)  #REPLACE TRAIN WITH THE REGISTERED NAME 
  TEST: ("MCF7",)    #REPLACE TRAIN WITH THE REGISTERED NAME
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
INPUT:
  MIN_SIZE_TRAIN: (440, 480, 520, 560, 580, 620)

  CROP:
    ENABLED: False
  FORMAT: "BGR"
TEST:
  DETECTIONS_PER_IMAGE: 3000 # 1000
  EVAL_PERIOD: 500
  PRECISE_BN:
    ENABLED: False
  AUG:
    ENABLED: False
OUTPUT_DIR: "./output" # PATH TO SAVE THE OUTPUT RESULTS
DATALOADER:
  NUM_WORKERS: 8
VERSION: 2
[01/11 15:23:08] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 8
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('MCF7',)
  TRAIN: ('MCF7',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (440, 480, 520, 560, 580, 620)
  MIN_SIZE_TRAIN_SAMPLING: choice
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.25, 0.5, 1.0, 2.0, 4.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[4], [9], [17], [31], [64], [127]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: SyncBN
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [128, 128, 128]
  PIXEL_STD: [11.578, 11.578, 11.578]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    AVD: False
    AVG_DOWN: False
    BOTTLENECK_WIDTH: 64
    DEEP_STEM: False
    DEFORM_MODULATED: True
    DEFORM_NUM_GROUPS: 2
    DEFORM_ON_PER_STAGE: [False, True, True, True]
    DEPTH: 200
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RADIX: 2
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 3000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: True
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: SyncBN
    NUM_CONV: 4
    NUM_FC: 1
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: CascadeROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: SyncBN
    NUM_CONV: 8
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 3000
    POST_NMS_TOPK_TRAIN: 3000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 500
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 30000
  MOMENTUM: 0.9
  STEPS: (17500, 20000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 3000
  EVAL_PERIOD: 500
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/11 15:23:08] detectron2.utils.env INFO: Using a generated random seed 8174337
[01/11 15:23:14] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(
      256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output2): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral3): Conv2d(
      512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output3): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral4): Conv2d(
      1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output4): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral5): Conv2d(
      2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output5): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (dropout): Dropout(p=0.3, inplace=False)
        (conv1_1): Conv2d(
          3, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1_2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1_3): Conv2d(
          64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=1, stride=1, padding=0)
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (4): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (5): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (6): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (7): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (8): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (9): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (10): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (11): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (12): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (13): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (14): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (15): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (16): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (17): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (18): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (19): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (20): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (21): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (22): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (23): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res4): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (4): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (5): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (6): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (7): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (8): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (9): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (10): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (11): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (12): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (13): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (14): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (15): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (16): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (17): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (18): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (19): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (20): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (21): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (22): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (23): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (24): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (25): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (26): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (27): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (28): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (29): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (30): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (31): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (32): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (33): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (34): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (35): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 5, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (roi_heads): CascadeROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): ModuleList(
      (0): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
      (1): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
      (2): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
    )
    (box_predictor): ModuleList(
      (0): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
      (1): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
      (2): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn5): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn6): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn7): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn8): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[01/11 15:23:17] detectron2.data.datasets.coco INFO: Loading /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json takes 3.46 seconds.
[01/11 15:23:17] detectron2.data.datasets.coco INFO: Loaded 469 images in COCO format from /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json
[01/11 15:23:18] detectron2.data.build INFO: Removed 0 images with no usable annotations. 469 images left.
[01/11 15:23:18] detectron2.data.build INFO: Distribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|    cell    | 212688       |
|            |              |[0m
[01/11 15:23:18] detectron2.data.common INFO: Serializing 469 elements to byte tensors and concatenating them all ...
[01/11 15:23:19] detectron2.data.common INFO: Serialized dataset takes 77.04 MiB
[01/11 15:23:19] detectron2.data.detection_utils INFO: TransformGens used in training: [ResizeShortestEdge(short_edge_length=(440, 480, 520, 560, 580, 620), max_size=1333, sample_style='choice'), RandomFlip()]
[01/11 15:23:19] detectron2.data.build INFO: Using training sampler TrainingSampler
[01/11 15:23:20] fvcore.common.checkpoint INFO: Loading checkpoint from https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
[01/11 15:23:20] fvcore.common.file_io INFO: URL https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth cached in /home/stevekang/.torch/fvcore_cache/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
[01/11 15:23:21] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.0' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 15:23:21] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.1' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 15:23:21] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.2' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 15:23:21] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.3' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 15:23:21] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.4' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 15:23:21] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.objectness_logits.weight' has shape (3, 256, 1, 1) in the checkpoint but (5, 256, 1, 1) in the model! Skipped.
[01/11 15:23:21] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.objectness_logits.bias' has shape (3,) in the checkpoint but (5,) in the model! Skipped.
[01/11 15:23:21] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.anchor_deltas.weight' has shape (12, 256, 1, 1) in the checkpoint but (20, 256, 1, 1) in the model! Skipped.
[01/11 15:23:21] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.anchor_deltas.bias' has shape (12,) in the checkpoint but (20,) in the model! Skipped.
[01/11 15:23:21] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.0.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 15:23:21] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.0.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 15:23:21] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.1.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 15:23:21] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.1.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 15:23:21] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.2.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 15:23:21] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.2.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 15:23:21] fvcore.common.checkpoint WARNING: 'roi_heads.mask_head.predictor.weight' has shape (80, 256, 1, 1) in the checkpoint but (1, 256, 1, 1) in the model! Skipped.
[01/11 15:23:21] fvcore.common.checkpoint WARNING: 'roi_heads.mask_head.predictor.bias' has shape (80,) in the checkpoint but (1,) in the model! Skipped.
[01/11 15:23:21] fvcore.common.checkpoint INFO: Some model parameters are not in the checkpoint:
  [34mbackbone.bottom_up.res2.2.conv2.bn1.num_batches_tracked[0m
  [34mbackbone.bottom_up.stem.conv1_2.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.conv2.bn1.num_batches_tracked[0m
  [34mbackbone.bottom_up.stem.conv1_1.norm.num_batches_tracked[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.shortcut.norm.num_batches_tracked[0m
  [34mroi_heads.box_predictor.2.cls_score.{weight, bias}[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{1, 0, 3, 5, 2, 4}[0m
  [34mroi_heads.mask_head.predictor.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv2.bn0.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.conv2.bn0.num_batches_tracked[0m
  [34mroi_heads.box_predictor.0.cls_score.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv3.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.2.conv3.norm.num_batches_tracked[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.num_batches_tracked[0m
  [34mroi_heads.box_predictor.1.cls_score.{weight, bias}[0m
  [34mbackbone.bottom_up.stem.conv1_3.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.1.conv2.bn1.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.2.conv2.bn0.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.1.conv3.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.2.conv1.norm.num_batches_tracked[0m
[01/11 15:23:21] detectron2.engine.train_loop INFO: Starting training from iteration 0
[01/11 15:24:08] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f8741738790> to CPU due to CUDA OOM
[01/11 15:24:37] detectron2.engine.hooks INFO: Overall training speed: 12 iterations in 0:00:49 (4.1338 s / it)
[01/11 15:24:37] detectron2.engine.hooks INFO: Total training time: 0:00:49 (0:00:00 on hooks)
[01/11 16:16:39] detectron2 INFO: Rank of current process: 1. World size: 8
[01/11 16:16:40] detectron2 INFO: Environment info:
------------------------  ---------------------------------------------------------------------------------------------
sys.platform              linux
Python                    3.10.8 (main, Nov 24 2022, 14:13:03) [GCC 11.2.0]
numpy                     1.23.5
detectron2                0.1.1 @/lunit/home/stevekang/decentAI/cellDetection/new_resnest/detectron2-ResNeSt/detectron2
detectron2 compiler       GCC 5.4
detectron2 CUDA compiler  10.1
detectron2 arch flags     sm_61
DETECTRON2_ENV_MODULE     <not set>
PyTorch                   1.12.0+cu102 @/home/stevekang/anaconda3/envs/resnest/lib/python3.10/site-packages/torch
PyTorch debug build       False
CUDA available            True
GPU 0,1,2,3,4,5,6,7       TITAN Xp
CUDA_HOME                 /usr/local/cuda
NVCC                      Cuda compilation tools, release 10.1, V10.1.243
Pillow                    9.3.0
torchvision               0.13.0+cu102 @/home/stevekang/anaconda3/envs/resnest/lib/python3.10/site-packages/torchvision
torchvision arch flags    sm_35, sm_50, sm_60, sm_70, sm_75
cv2                       4.6.0
------------------------  ---------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[01/11 16:16:40] detectron2 INFO: Command line arguments: Namespace(config_file='tools/mcf.yaml', resume=False, eval_only=False, num_gpus=8, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:51261', opts=[])
[01/11 16:16:40] detectron2 INFO: Contents of args.config_file=tools/mcf.yaml:
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHTS: "https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth"
  BACKBONE:
    NAME: "build_resnet_fpn_backbone"
    FREEZE_AT: 0
  MASK_ON: True
  RESNETS:
    OUT_FEATURES: ["res2", "res3", "res4", "res5"]
    DEPTH: 200
    STRIDE_IN_1X1: False
    RADIX: 2
    DEFORM_ON_PER_STAGE: [False, True, True, True] # on Res3,Res4,Res5
    DEFORM_MODULATED: True
    DEFORM_NUM_GROUPS: 2
    NORM: "SyncBN"

  FPN:
    NORM: "SyncBN"
    IN_FEATURES: ["res2", "res3", "res4", "res5"]
  ANCHOR_GENERATOR:
    SIZES: [[4], [9], [17], [31], [64], [127]]  # One size for each in feature map
    ASPECT_RATIOS: [[0.25, 0.5, 1.0, 2.0, 4.0]]  # Three aspect ratios (same for all in feature maps)
  ROI_HEADS:
    NUM_CLASSES: 1
    BATCH_SIZE_PER_IMAGE: 512
    NAME: CascadeROIHeads
    IN_FEATURES: ["p2", "p3", "p4", "p5"]
  ROI_BOX_HEAD:
    NAME: "FastRCNNConvFCHead"
    NUM_CONV: 4
    NUM_FC: 1
    NORM: "SyncBN"
    POOLER_RESOLUTION: 7
    CLS_AGNOSTIC_BBOX_REG: True
  ROI_MASK_HEAD:
    NUM_CONV: 8
    NORM: "SyncBN"
  RPN:
    IN_FEATURES: ["p2" ,"p2", "p3", "p4", "p5", "p6"]
    BATCH_SIZE_PER_IMAGE: 256
    POST_NMS_TOPK_TEST: 3000
    POST_NMS_TOPK_TRAIN: 3000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
  RETINANET:
    NUM_CLASSES: 1
    TOPK_CANDIDATES_TEST: 3000
  PIXEL_MEAN: [128, 128, 128]
  PIXEL_STD: [11.578, 11.578, 11.578]
SOLVER:
  IMS_PER_BATCH: 8
  BASE_LR: 0.02
  STEPS: (17500, 20000)
  MAX_ITER: 30000
  CHECKPOINT_PERIOD: 500
DATASETS:
  TRAIN: ("MCF7",)  #REPLACE TRAIN WITH THE REGISTERED NAME 
  TEST: ("MCF7",)    #REPLACE TRAIN WITH THE REGISTERED NAME
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
INPUT:
  MIN_SIZE_TRAIN: (440, 480, 520, 560, 580, 620)

  CROP:
    ENABLED: False
  FORMAT: "BGR"
TEST:
  DETECTIONS_PER_IMAGE: 3000 # 1000
  EVAL_PERIOD: 500
  PRECISE_BN:
    ENABLED: False
  AUG:
    ENABLED: False
OUTPUT_DIR: "./output" # PATH TO SAVE THE OUTPUT RESULTS
DATALOADER:
  NUM_WORKERS: 8
VERSION: 2
[01/11 16:16:40] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 8
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('MCF7',)
  TRAIN: ('MCF7',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (440, 480, 520, 560, 580, 620)
  MIN_SIZE_TRAIN_SAMPLING: choice
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.25, 0.5, 1.0, 2.0, 4.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[4], [9], [17], [31], [64], [127]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: SyncBN
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [128, 128, 128]
  PIXEL_STD: [11.578, 11.578, 11.578]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    AVD: False
    AVG_DOWN: False
    BOTTLENECK_WIDTH: 64
    DEEP_STEM: False
    DEFORM_MODULATED: True
    DEFORM_NUM_GROUPS: 2
    DEFORM_ON_PER_STAGE: [False, True, True, True]
    DEPTH: 200
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RADIX: 2
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 3000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: True
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: SyncBN
    NUM_CONV: 4
    NUM_FC: 1
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: CascadeROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: SyncBN
    NUM_CONV: 8
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 3000
    POST_NMS_TOPK_TRAIN: 3000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 500
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 30000
  MOMENTUM: 0.9
  STEPS: (17500, 20000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 3000
  EVAL_PERIOD: 500
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/11 16:16:40] detectron2.utils.env INFO: Using a generated random seed 40554061
[01/11 16:16:47] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(
      256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output2): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral3): Conv2d(
      512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output3): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral4): Conv2d(
      1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output4): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral5): Conv2d(
      2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output5): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (dropout): Dropout(p=0.3, inplace=False)
        (conv1_1): Conv2d(
          3, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1_2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1_3): Conv2d(
          64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=1, stride=1, padding=0)
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (4): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (5): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (6): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (7): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (8): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (9): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (10): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (11): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (12): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (13): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (14): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (15): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (16): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (17): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (18): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (19): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (20): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (21): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (22): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (23): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res4): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (4): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (5): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (6): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (7): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (8): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (9): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (10): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (11): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (12): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (13): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (14): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (15): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (16): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (17): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (18): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (19): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (20): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (21): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (22): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (23): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (24): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (25): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (26): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (27): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (28): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (29): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (30): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (31): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (32): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (33): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (34): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (35): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 5, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (roi_heads): CascadeROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): ModuleList(
      (0): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
      (1): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
      (2): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
    )
    (box_predictor): ModuleList(
      (0): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
      (1): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
      (2): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn5): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn6): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn7): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn8): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[01/11 16:16:51] detectron2.data.datasets.coco INFO: Loading /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json takes 3.68 seconds.
[01/11 16:16:51] detectron2.data.datasets.coco INFO: Loaded 469 images in COCO format from /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json
[01/11 16:16:52] detectron2.data.build INFO: Removed 0 images with no usable annotations. 469 images left.
[01/11 16:16:52] detectron2.data.build INFO: Distribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|    cell    | 212688       |
|            |              |[0m
[01/11 16:16:52] detectron2.data.common INFO: Serializing 469 elements to byte tensors and concatenating them all ...
[01/11 16:16:53] detectron2.data.common INFO: Serialized dataset takes 77.04 MiB
[01/11 16:16:53] detectron2.data.detection_utils INFO: TransformGens used in training: [ResizeShortestEdge(short_edge_length=(440, 480, 520, 560, 580, 620), max_size=1333, sample_style='choice'), RandomFlip()]
[01/11 16:16:53] detectron2.data.build INFO: Using training sampler TrainingSampler
[01/11 16:16:54] fvcore.common.checkpoint INFO: Loading checkpoint from https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
[01/11 16:16:54] fvcore.common.file_io INFO: URL https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth cached in /home/stevekang/.torch/fvcore_cache/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
[01/11 16:16:57] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.0' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 16:16:57] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.1' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 16:16:57] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.2' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 16:16:57] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.3' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 16:16:57] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.4' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 16:16:57] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.objectness_logits.weight' has shape (3, 256, 1, 1) in the checkpoint but (5, 256, 1, 1) in the model! Skipped.
[01/11 16:16:57] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.objectness_logits.bias' has shape (3,) in the checkpoint but (5,) in the model! Skipped.
[01/11 16:16:57] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.anchor_deltas.weight' has shape (12, 256, 1, 1) in the checkpoint but (20, 256, 1, 1) in the model! Skipped.
[01/11 16:16:57] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.anchor_deltas.bias' has shape (12,) in the checkpoint but (20,) in the model! Skipped.
[01/11 16:16:57] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.0.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 16:16:57] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.0.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 16:16:57] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.1.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 16:16:57] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.1.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 16:16:57] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.2.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 16:16:57] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.2.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 16:16:57] fvcore.common.checkpoint WARNING: 'roi_heads.mask_head.predictor.weight' has shape (80, 256, 1, 1) in the checkpoint but (1, 256, 1, 1) in the model! Skipped.
[01/11 16:16:57] fvcore.common.checkpoint WARNING: 'roi_heads.mask_head.predictor.bias' has shape (80,) in the checkpoint but (1,) in the model! Skipped.
[01/11 16:16:58] fvcore.common.checkpoint INFO: Some model parameters are not in the checkpoint:
  [34mroi_heads.mask_head.predictor.{bias, weight}[0m
  [34mbackbone.bottom_up.stem.conv1_3.norm.num_batches_tracked[0m
  [34mroi_heads.box_predictor.0.cls_score.{bias, weight}[0m
  [34mbackbone.bottom_up.stem.conv1_2.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.2.conv2.bn1.num_batches_tracked[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{1, 0, 3, 5, 4, 2}[0m
  [34mroi_heads.box_predictor.1.cls_score.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv2.bn1.num_batches_tracked[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.2.conv3.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.1.conv3.norm.num_batches_tracked[0m
  [34mroi_heads.box_predictor.2.cls_score.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.shortcut.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.stem.conv1_1.norm.num_batches_tracked[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.2.conv1.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.1.conv2.bn0.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.conv3.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.conv2.bn0.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.2.conv2.bn0.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.conv2.bn1.num_batches_tracked[0m
[01/11 16:16:58] detectron2.engine.train_loop INFO: Starting training from iteration 0
[01/11 16:17:28] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fb51ba9c790> to CPU due to CUDA OOM
[01/11 16:18:04] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fb51ba9c790> to CPU due to CUDA OOM
[01/11 16:18:29] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fb51ba9c790> to CPU due to CUDA OOM
[01/11 16:18:37] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fb51ba9c790> to CPU due to CUDA OOM
[01/11 16:19:25] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fb51ba9c790> to CPU due to CUDA OOM
[01/11 16:20:13] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fb51ba9c790> to CPU due to CUDA OOM
[01/11 16:21:20] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fb51ba9c790> to CPU due to CUDA OOM
[01/11 16:21:26] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fb51ba9c790> to CPU due to CUDA OOM
[01/11 16:22:09] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fb51ba9c790> to CPU due to CUDA OOM
[01/11 16:22:38] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fb51ba9c790> to CPU due to CUDA OOM
[01/11 16:22:46] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fb51ba9c790> to CPU due to CUDA OOM
[01/11 16:23:37] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fb51ba9c790> to CPU due to CUDA OOM
[01/11 16:23:45] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fb51ba9c790> to CPU due to CUDA OOM
[01/11 16:23:57] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fb51ba9c790> to CPU due to CUDA OOM
[01/11 16:25:32] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fb51ba9c790> to CPU due to CUDA OOM
[01/11 16:25:52] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fb51ba9c790> to CPU due to CUDA OOM
[01/11 16:27:08] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fb51ba9c790> to CPU due to CUDA OOM
[01/11 16:27:22] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fb51ba9c790> to CPU due to CUDA OOM
[01/11 16:28:12] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fb51ba9c790> to CPU due to CUDA OOM
[01/11 16:29:57] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fb51ba9c790> to CPU due to CUDA OOM
[01/11 16:31:10] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fb51ba9c790> to CPU due to CUDA OOM
[01/11 16:31:24] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fb51ba9c790> to CPU due to CUDA OOM
[01/11 16:32:03] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fb51ba9c790> to CPU due to CUDA OOM
[01/11 16:44:19] detectron2 INFO: Rank of current process: 1. World size: 8
[01/11 16:44:21] detectron2 INFO: Environment info:
------------------------  ---------------------------------------------------------------------------------------------
sys.platform              linux
Python                    3.10.8 (main, Nov 24 2022, 14:13:03) [GCC 11.2.0]
numpy                     1.23.5
detectron2                0.1.1 @/lunit/home/stevekang/decentAI/cellDetection/new_resnest/detectron2-ResNeSt/detectron2
detectron2 compiler       GCC 5.4
detectron2 CUDA compiler  10.1
detectron2 arch flags     sm_61
DETECTRON2_ENV_MODULE     <not set>
PyTorch                   1.12.0+cu102 @/home/stevekang/anaconda3/envs/resnest/lib/python3.10/site-packages/torch
PyTorch debug build       False
CUDA available            True
GPU 0,1,2,3,4,5,6,7       TITAN Xp
CUDA_HOME                 /usr/local/cuda
NVCC                      Cuda compilation tools, release 10.1, V10.1.243
Pillow                    9.3.0
torchvision               0.13.0+cu102 @/home/stevekang/anaconda3/envs/resnest/lib/python3.10/site-packages/torchvision
torchvision arch flags    sm_35, sm_50, sm_60, sm_70, sm_75
cv2                       4.6.0
------------------------  ---------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[01/11 16:44:21] detectron2 INFO: Command line arguments: Namespace(config_file='tools/mcf.yaml', resume=False, eval_only=False, num_gpus=8, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:51261', opts=[])
[01/11 16:44:21] detectron2 INFO: Contents of args.config_file=tools/mcf.yaml:
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHTS: "https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth"
  BACKBONE:
    NAME: "build_resnet_fpn_backbone"
    FREEZE_AT: 0
  MASK_ON: True
  RESNETS:
    OUT_FEATURES: ["res2", "res3", "res4", "res5"]
    DEPTH: 200
    STRIDE_IN_1X1: False
    RADIX: 2
    DEFORM_ON_PER_STAGE: [False, True, True, True] # on Res3,Res4,Res5
    DEFORM_MODULATED: True
    DEFORM_NUM_GROUPS: 2
    NORM: "SyncBN"

  FPN:
    NORM: "SyncBN"
    IN_FEATURES: ["res2", "res3", "res4", "res5"]
  ANCHOR_GENERATOR:
    SIZES: [[4], [9], [17], [31], [64], [127]]  # One size for each in feature map
    ASPECT_RATIOS: [[0.25, 0.5, 1.0, 2.0, 4.0]]  # Three aspect ratios (same for all in feature maps)
  ROI_HEADS:
    NUM_CLASSES: 1
    BATCH_SIZE_PER_IMAGE: 512
    NAME: CascadeROIHeads
    IN_FEATURES: ["p2", "p3", "p4", "p5"]
  ROI_BOX_HEAD:
    NAME: "FastRCNNConvFCHead"
    NUM_CONV: 4
    NUM_FC: 1
    NORM: "SyncBN"
    POOLER_RESOLUTION: 7
    CLS_AGNOSTIC_BBOX_REG: True
  ROI_MASK_HEAD:
    NUM_CONV: 8
    NORM: "SyncBN"
  RPN:
    IN_FEATURES: ["p2" ,"p2", "p3", "p4", "p5", "p6"]
    BATCH_SIZE_PER_IMAGE: 256
    POST_NMS_TOPK_TEST: 3000
    POST_NMS_TOPK_TRAIN: 3000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
  RETINANET:
    NUM_CLASSES: 1
    TOPK_CANDIDATES_TEST: 3000
  PIXEL_MEAN: [128, 128, 128]
  PIXEL_STD: [11.578, 11.578, 11.578]
SOLVER:
  IMS_PER_BATCH: 8
  BASE_LR: 0.02
  STEPS: (17500, 20000)
  MAX_ITER: 30000
  CHECKPOINT_PERIOD: 500
DATASETS:
  TRAIN: ("MCF7",)  #REPLACE TRAIN WITH THE REGISTERED NAME 
  TEST: ("MCF7",)    #REPLACE TRAIN WITH THE REGISTERED NAME
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
INPUT:
  MIN_SIZE_TRAIN: (440, 480, 520, 560, 580, 620)

  CROP:
    ENABLED: False
  FORMAT: "BGR"
TEST:
  DETECTIONS_PER_IMAGE: 3000 # 1000
  EVAL_PERIOD: 500
  PRECISE_BN:
    ENABLED: False
  AUG:
    ENABLED: False
OUTPUT_DIR: "./output" # PATH TO SAVE THE OUTPUT RESULTS
DATALOADER:
  NUM_WORKERS: 20
VERSION: 2
[01/11 16:44:21] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 20
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('MCF7',)
  TRAIN: ('MCF7',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (440, 480, 520, 560, 580, 620)
  MIN_SIZE_TRAIN_SAMPLING: choice
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.25, 0.5, 1.0, 2.0, 4.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[4], [9], [17], [31], [64], [127]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: SyncBN
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [128, 128, 128]
  PIXEL_STD: [11.578, 11.578, 11.578]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    AVD: False
    AVG_DOWN: False
    BOTTLENECK_WIDTH: 64
    DEEP_STEM: False
    DEFORM_MODULATED: True
    DEFORM_NUM_GROUPS: 2
    DEFORM_ON_PER_STAGE: [False, True, True, True]
    DEPTH: 200
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RADIX: 2
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 3000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: True
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: SyncBN
    NUM_CONV: 4
    NUM_FC: 1
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: CascadeROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: SyncBN
    NUM_CONV: 8
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 3000
    POST_NMS_TOPK_TRAIN: 3000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 500
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 30000
  MOMENTUM: 0.9
  STEPS: (17500, 20000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 3000
  EVAL_PERIOD: 500
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/11 16:44:21] detectron2.utils.env INFO: Using a generated random seed 21304633
[01/11 16:44:27] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(
      256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output2): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral3): Conv2d(
      512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output3): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral4): Conv2d(
      1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output4): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral5): Conv2d(
      2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output5): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (dropout): Dropout(p=0.3, inplace=False)
        (conv1_1): Conv2d(
          3, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1_2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1_3): Conv2d(
          64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=1, stride=1, padding=0)
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (4): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (5): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (6): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (7): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (8): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (9): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (10): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (11): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (12): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (13): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (14): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (15): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (16): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (17): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (18): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (19): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (20): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (21): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (22): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (23): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res4): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (4): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (5): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (6): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (7): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (8): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (9): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (10): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (11): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (12): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (13): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (14): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (15): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (16): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (17): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (18): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (19): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (20): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (21): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (22): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (23): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (24): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (25): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (26): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (27): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (28): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (29): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (30): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (31): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (32): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (33): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (34): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (35): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 5, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (roi_heads): CascadeROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): ModuleList(
      (0): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
      (1): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
      (2): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
    )
    (box_predictor): ModuleList(
      (0): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
      (1): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
      (2): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn5): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn6): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn7): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn8): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[01/11 16:44:31] detectron2.data.datasets.coco INFO: Loading /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json takes 3.46 seconds.
[01/11 16:44:31] detectron2.data.datasets.coco INFO: Loaded 469 images in COCO format from /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json
[01/11 16:44:32] detectron2.data.build INFO: Removed 0 images with no usable annotations. 469 images left.
[01/11 16:44:32] detectron2.data.build INFO: Distribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|    cell    | 212688       |
|            |              |[0m
[01/11 16:44:32] detectron2.data.common INFO: Serializing 469 elements to byte tensors and concatenating them all ...
[01/11 16:44:32] detectron2.data.common INFO: Serialized dataset takes 77.04 MiB
[01/11 16:44:32] detectron2.data.detection_utils INFO: TransformGens used in training: [ResizeShortestEdge(short_edge_length=(440, 480, 520, 560, 580, 620), max_size=1333, sample_style='choice'), RandomFlip()]
[01/11 16:44:32] detectron2.data.build INFO: Using training sampler TrainingSampler
[01/11 16:44:33] fvcore.common.checkpoint INFO: Loading checkpoint from https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
[01/11 16:44:33] fvcore.common.file_io INFO: URL https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth cached in /home/stevekang/.torch/fvcore_cache/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
[01/11 16:44:36] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.0' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 16:44:36] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.1' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 16:44:36] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.2' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 16:44:36] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.3' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 16:44:36] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.4' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 16:44:36] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.objectness_logits.weight' has shape (3, 256, 1, 1) in the checkpoint but (5, 256, 1, 1) in the model! Skipped.
[01/11 16:44:36] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.objectness_logits.bias' has shape (3,) in the checkpoint but (5,) in the model! Skipped.
[01/11 16:44:36] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.anchor_deltas.weight' has shape (12, 256, 1, 1) in the checkpoint but (20, 256, 1, 1) in the model! Skipped.
[01/11 16:44:36] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.anchor_deltas.bias' has shape (12,) in the checkpoint but (20,) in the model! Skipped.
[01/11 16:44:36] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.0.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 16:44:36] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.0.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 16:44:36] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.1.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 16:44:36] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.1.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 16:44:36] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.2.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 16:44:36] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.2.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 16:44:36] fvcore.common.checkpoint WARNING: 'roi_heads.mask_head.predictor.weight' has shape (80, 256, 1, 1) in the checkpoint but (1, 256, 1, 1) in the model! Skipped.
[01/11 16:44:36] fvcore.common.checkpoint WARNING: 'roi_heads.mask_head.predictor.bias' has shape (80,) in the checkpoint but (1,) in the model! Skipped.
[01/11 16:44:37] fvcore.common.checkpoint INFO: Some model parameters are not in the checkpoint:
  [34mproposal_generator.rpn_head.objectness_logits.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.shortcut.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.stem.conv1_1.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.1.conv2.bn1.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.conv2.bn0.num_batches_tracked[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{4, 0, 5, 1, 3, 2}[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.num_batches_tracked[0m
  [34mroi_heads.box_predictor.2.cls_score.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.2.conv2.bn0.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.2.conv1.norm.num_batches_tracked[0m
  [34mroi_heads.box_predictor.1.cls_score.{bias, weight}[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv3.norm.num_batches_tracked[0m
  [34mroi_heads.box_predictor.0.cls_score.{bias, weight}[0m
  [34mbackbone.bottom_up.stem.conv1_3.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.num_batches_tracked[0m
  [34mroi_heads.mask_head.predictor.{bias, weight}[0m
  [34mbackbone.bottom_up.stem.conv1_2.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.conv2.bn1.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.conv3.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.1.conv2.bn0.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.2.conv3.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.2.conv2.bn1.num_batches_tracked[0m
[01/11 16:44:37] detectron2.engine.train_loop INFO: Starting training from iteration 0
[01/11 16:45:19] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f24b3018790> to CPU due to CUDA OOM
[01/11 16:45:25] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f24b3018790> to CPU due to CUDA OOM
[01/11 16:45:55] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f24b3018790> to CPU due to CUDA OOM
[01/11 16:46:10] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f24b3018790> to CPU due to CUDA OOM
[01/11 16:46:52] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f24b3018790> to CPU due to CUDA OOM
[01/11 16:46:58] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f24b3018790> to CPU due to CUDA OOM
[01/11 16:47:22] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f24b3018790> to CPU due to CUDA OOM
[01/11 16:47:59] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f24b3018790> to CPU due to CUDA OOM
[01/11 16:48:09] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f24b3018790> to CPU due to CUDA OOM
[01/11 16:48:21] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f24b3018790> to CPU due to CUDA OOM
[01/11 16:48:36] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f24b3018790> to CPU due to CUDA OOM
[01/11 16:49:06] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f24b3018790> to CPU due to CUDA OOM
[01/11 16:49:07] detectron2.engine.hooks INFO: Overall training speed: 40 iterations in 0:03:35 (5.3805 s / it)
[01/11 16:49:07] detectron2.engine.hooks INFO: Total training time: 0:03:35 (0:00:00 on hooks)
[01/11 16:52:33] detectron2 INFO: Rank of current process: 1. World size: 8
[01/11 16:52:34] detectron2 INFO: Environment info:
------------------------  ---------------------------------------------------------------------------------------------
sys.platform              linux
Python                    3.10.8 (main, Nov 24 2022, 14:13:03) [GCC 11.2.0]
numpy                     1.23.5
detectron2                0.1.1 @/lunit/home/stevekang/decentAI/cellDetection/new_resnest/detectron2-ResNeSt/detectron2
detectron2 compiler       GCC 5.4
detectron2 CUDA compiler  10.1
detectron2 arch flags     sm_61
DETECTRON2_ENV_MODULE     <not set>
PyTorch                   1.12.0+cu102 @/home/stevekang/anaconda3/envs/resnest/lib/python3.10/site-packages/torch
PyTorch debug build       False
CUDA available            True
GPU 0,1,2,3,4,5,6,7       TITAN Xp
CUDA_HOME                 /usr/local/cuda
NVCC                      Cuda compilation tools, release 10.1, V10.1.243
Pillow                    9.3.0
torchvision               0.13.0+cu102 @/home/stevekang/anaconda3/envs/resnest/lib/python3.10/site-packages/torchvision
torchvision arch flags    sm_35, sm_50, sm_60, sm_70, sm_75
cv2                       4.6.0
------------------------  ---------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[01/11 16:52:34] detectron2 INFO: Command line arguments: Namespace(config_file='tools/mcf.yaml', resume=False, eval_only=False, num_gpus=8, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:51261', opts=[])
[01/11 16:52:34] detectron2 INFO: Contents of args.config_file=tools/mcf.yaml:
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHTS: "https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth"
  BACKBONE:
    NAME: "build_resnet_fpn_backbone"
    FREEZE_AT: 0
  MASK_ON: True
  RESNETS:
    OUT_FEATURES: ["res2", "res3", "res4", "res5"]
    DEPTH: 200
    STRIDE_IN_1X1: False
    RADIX: 2
    DEFORM_ON_PER_STAGE: [False, True, True, True] # on Res3,Res4,Res5
    DEFORM_MODULATED: True
    DEFORM_NUM_GROUPS: 2
    NORM: "SyncBN"

  FPN:
    NORM: "SyncBN"
    IN_FEATURES: ["res2", "res3", "res4", "res5"]
  ANCHOR_GENERATOR:
    SIZES: [[4], [9], [17], [31], [64], [127]]  # One size for each in feature map
    ASPECT_RATIOS: [[0.25, 0.5, 1.0, 2.0, 4.0]]  # Three aspect ratios (same for all in feature maps)
  ROI_HEADS:
    NUM_CLASSES: 1
    BATCH_SIZE_PER_IMAGE: 512
    NAME: CascadeROIHeads
    IN_FEATURES: ["p2", "p3", "p4", "p5"]
  ROI_BOX_HEAD:
    NAME: "FastRCNNConvFCHead"
    NUM_CONV: 4
    NUM_FC: 1
    NORM: "SyncBN"
    POOLER_RESOLUTION: 7
    CLS_AGNOSTIC_BBOX_REG: True
  ROI_MASK_HEAD:
    NUM_CONV: 8
    NORM: "SyncBN"
  RPN:
    IN_FEATURES: ["p2" ,"p2", "p3", "p4", "p5", "p6"]
    BATCH_SIZE_PER_IMAGE: 256
    POST_NMS_TOPK_TEST: 3000
    POST_NMS_TOPK_TRAIN: 3000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
  RETINANET:
    NUM_CLASSES: 1
    TOPK_CANDIDATES_TEST: 3000
  PIXEL_MEAN: [128, 128, 128]
  PIXEL_STD: [11.578, 11.578, 11.578]
SOLVER:
  IMS_PER_BATCH: 4
  BASE_LR: 0.02
  STEPS: (17500, 20000)
  MAX_ITER: 30000
  CHECKPOINT_PERIOD: 500
DATASETS:
  TRAIN: ("MCF7",)  #REPLACE TRAIN WITH THE REGISTERED NAME 
  TEST: ("MCF7",)    #REPLACE TRAIN WITH THE REGISTERED NAME
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
INPUT:
  MIN_SIZE_TRAIN: (440, 480, 520, 560, 580, 620)

  CROP:
    ENABLED: False
  FORMAT: "BGR"
TEST:
  DETECTIONS_PER_IMAGE: 3000 # 1000
  EVAL_PERIOD: 500
  PRECISE_BN:
    ENABLED: False
  AUG:
    ENABLED: False
OUTPUT_DIR: "./output" # PATH TO SAVE THE OUTPUT RESULTS
DATALOADER:
  NUM_WORKERS: 20
VERSION: 2
[01/11 16:52:34] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 20
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('MCF7',)
  TRAIN: ('MCF7',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (440, 480, 520, 560, 580, 620)
  MIN_SIZE_TRAIN_SAMPLING: choice
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.25, 0.5, 1.0, 2.0, 4.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[4], [9], [17], [31], [64], [127]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: SyncBN
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [128, 128, 128]
  PIXEL_STD: [11.578, 11.578, 11.578]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    AVD: False
    AVG_DOWN: False
    BOTTLENECK_WIDTH: 64
    DEEP_STEM: False
    DEFORM_MODULATED: True
    DEFORM_NUM_GROUPS: 2
    DEFORM_ON_PER_STAGE: [False, True, True, True]
    DEPTH: 200
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RADIX: 2
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 3000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: True
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: SyncBN
    NUM_CONV: 4
    NUM_FC: 1
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: CascadeROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: SyncBN
    NUM_CONV: 8
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 3000
    POST_NMS_TOPK_TRAIN: 3000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 500
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 30000
  MOMENTUM: 0.9
  STEPS: (17500, 20000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 3000
  EVAL_PERIOD: 500
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/11 16:52:34] detectron2.utils.env INFO: Using a generated random seed 34426020
[01/11 16:52:40] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(
      256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output2): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral3): Conv2d(
      512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output3): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral4): Conv2d(
      1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output4): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral5): Conv2d(
      2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output5): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (dropout): Dropout(p=0.3, inplace=False)
        (conv1_1): Conv2d(
          3, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1_2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1_3): Conv2d(
          64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=1, stride=1, padding=0)
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (4): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (5): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (6): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (7): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (8): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (9): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (10): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (11): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (12): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (13): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (14): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (15): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (16): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (17): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (18): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (19): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (20): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (21): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (22): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (23): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res4): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (4): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (5): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (6): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (7): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (8): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (9): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (10): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (11): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (12): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (13): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (14): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (15): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (16): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (17): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (18): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (19): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (20): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (21): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (22): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (23): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (24): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (25): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (26): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (27): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (28): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (29): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (30): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (31): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (32): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (33): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (34): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (35): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 5, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (roi_heads): CascadeROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): ModuleList(
      (0): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
      (1): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
      (2): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
    )
    (box_predictor): ModuleList(
      (0): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
      (1): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
      (2): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn5): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn6): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn7): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn8): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[01/11 16:56:46] detectron2 INFO: Rank of current process: 1. World size: 8
[01/11 16:56:47] detectron2 INFO: Environment info:
------------------------  ---------------------------------------------------------------------------------------------
sys.platform              linux
Python                    3.10.8 (main, Nov 24 2022, 14:13:03) [GCC 11.2.0]
numpy                     1.23.5
detectron2                0.1.1 @/lunit/home/stevekang/decentAI/cellDetection/new_resnest/detectron2-ResNeSt/detectron2
detectron2 compiler       GCC 5.4
detectron2 CUDA compiler  10.1
detectron2 arch flags     sm_61
DETECTRON2_ENV_MODULE     <not set>
PyTorch                   1.12.0+cu102 @/home/stevekang/anaconda3/envs/resnest/lib/python3.10/site-packages/torch
PyTorch debug build       False
CUDA available            True
GPU 0,1,2,3,4,5,6,7       TITAN Xp
CUDA_HOME                 /usr/local/cuda
NVCC                      Cuda compilation tools, release 10.1, V10.1.243
Pillow                    9.3.0
torchvision               0.13.0+cu102 @/home/stevekang/anaconda3/envs/resnest/lib/python3.10/site-packages/torchvision
torchvision arch flags    sm_35, sm_50, sm_60, sm_70, sm_75
cv2                       4.6.0
------------------------  ---------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[01/11 16:56:47] detectron2 INFO: Command line arguments: Namespace(config_file='tools/mcf.yaml', resume=False, eval_only=False, num_gpus=8, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:51261', opts=[])
[01/11 16:56:47] detectron2 INFO: Contents of args.config_file=tools/mcf.yaml:
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHTS: "https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth"
  BACKBONE:
    NAME: "build_resnet_fpn_backbone"
    FREEZE_AT: 0
  MASK_ON: True
  RESNETS:
    OUT_FEATURES: ["res2", "res3", "res4", "res5"]
    DEPTH: 200
    STRIDE_IN_1X1: False
    RADIX: 2
    DEFORM_ON_PER_STAGE: [False, True, True, True] # on Res3,Res4,Res5
    DEFORM_MODULATED: True
    DEFORM_NUM_GROUPS: 2
    NORM: "SyncBN"

  FPN:
    NORM: "SyncBN"
    IN_FEATURES: ["res2", "res3", "res4", "res5"]
  ANCHOR_GENERATOR:
    SIZES: [[4], [9], [17], [31], [64], [127]]  # One size for each in feature map
    ASPECT_RATIOS: [[0.25, 0.5, 1.0, 2.0, 4.0]]  # Three aspect ratios (same for all in feature maps)
  ROI_HEADS:
    NUM_CLASSES: 1
    BATCH_SIZE_PER_IMAGE: 256
    NAME: CascadeROIHeads
    IN_FEATURES: ["p2", "p3", "p4", "p5"]
  ROI_BOX_HEAD:
    NAME: "FastRCNNConvFCHead"
    NUM_CONV: 4
    NUM_FC: 1
    NORM: "SyncBN"
    POOLER_RESOLUTION: 7
    CLS_AGNOSTIC_BBOX_REG: True
  ROI_MASK_HEAD:
    NUM_CONV: 8
    NORM: "SyncBN"
  RPN:
    IN_FEATURES: ["p2" ,"p2", "p3", "p4", "p5", "p6"]
    BATCH_SIZE_PER_IMAGE: 128
    POST_NMS_TOPK_TEST: 3000
    POST_NMS_TOPK_TRAIN: 3000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
  RETINANET:
    NUM_CLASSES: 1
    TOPK_CANDIDATES_TEST: 3000
  PIXEL_MEAN: [128, 128, 128]
  PIXEL_STD: [11.578, 11.578, 11.578]
SOLVER:
  IMS_PER_BATCH: 8
  BASE_LR: 0.02
  STEPS: (17500, 20000)
  MAX_ITER: 30000
  CHECKPOINT_PERIOD: 500
DATASETS:
  TRAIN: ("MCF7",)  #REPLACE TRAIN WITH THE REGISTERED NAME 
  TEST: ("MCF7",)    #REPLACE TRAIN WITH THE REGISTERED NAME
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
INPUT:
  MIN_SIZE_TRAIN: (440, 480, 520, 560, 580, 620)

  CROP:
    ENABLED: False
  FORMAT: "BGR"
TEST:
  DETECTIONS_PER_IMAGE: 3000 # 1000
  EVAL_PERIOD: 500
  PRECISE_BN:
    ENABLED: False
  AUG:
    ENABLED: False
OUTPUT_DIR: "./output" # PATH TO SAVE THE OUTPUT RESULTS
DATALOADER:
  NUM_WORKERS: 20
VERSION: 2
[01/11 16:56:47] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 20
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('MCF7',)
  TRAIN: ('MCF7',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (440, 480, 520, 560, 580, 620)
  MIN_SIZE_TRAIN_SAMPLING: choice
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.25, 0.5, 1.0, 2.0, 4.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[4], [9], [17], [31], [64], [127]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: SyncBN
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [128, 128, 128]
  PIXEL_STD: [11.578, 11.578, 11.578]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    AVD: False
    AVG_DOWN: False
    BOTTLENECK_WIDTH: 64
    DEEP_STEM: False
    DEFORM_MODULATED: True
    DEFORM_NUM_GROUPS: 2
    DEFORM_ON_PER_STAGE: [False, True, True, True]
    DEPTH: 200
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RADIX: 2
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 3000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: True
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: SyncBN
    NUM_CONV: 4
    NUM_FC: 1
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 256
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: CascadeROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: SyncBN
    NUM_CONV: 8
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 128
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 3000
    POST_NMS_TOPK_TRAIN: 3000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 500
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 30000
  MOMENTUM: 0.9
  STEPS: (17500, 20000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 3000
  EVAL_PERIOD: 500
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/11 16:56:47] detectron2.utils.env INFO: Using a generated random seed 47076770
[01/11 16:56:53] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(
      256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output2): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral3): Conv2d(
      512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output3): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral4): Conv2d(
      1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output4): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral5): Conv2d(
      2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output5): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (dropout): Dropout(p=0.3, inplace=False)
        (conv1_1): Conv2d(
          3, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1_2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1_3): Conv2d(
          64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=1, stride=1, padding=0)
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (4): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (5): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (6): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (7): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (8): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (9): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (10): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (11): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (12): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (13): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (14): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (15): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (16): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (17): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (18): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (19): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (20): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (21): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (22): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (23): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res4): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (4): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (5): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (6): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (7): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (8): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (9): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (10): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (11): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (12): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (13): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (14): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (15): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (16): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (17): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (18): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (19): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (20): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (21): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (22): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (23): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (24): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (25): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (26): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (27): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (28): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (29): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (30): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (31): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (32): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (33): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (34): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (35): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 5, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (roi_heads): CascadeROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): ModuleList(
      (0): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
      (1): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
      (2): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
    )
    (box_predictor): ModuleList(
      (0): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
      (1): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
      (2): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn5): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn6): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn7): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn8): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[01/11 16:56:56] detectron2.data.datasets.coco INFO: Loading /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json takes 3.54 seconds.
[01/11 16:56:57] detectron2.data.datasets.coco INFO: Loaded 469 images in COCO format from /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json
[01/11 16:56:57] detectron2.data.build INFO: Removed 0 images with no usable annotations. 469 images left.
[01/11 16:56:57] detectron2.data.build INFO: Distribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|    cell    | 212688       |
|            |              |[0m
[01/11 16:56:57] detectron2.data.common INFO: Serializing 469 elements to byte tensors and concatenating them all ...
[01/11 16:56:58] detectron2.data.common INFO: Serialized dataset takes 77.04 MiB
[01/11 16:56:58] detectron2.data.detection_utils INFO: TransformGens used in training: [ResizeShortestEdge(short_edge_length=(440, 480, 520, 560, 580, 620), max_size=1333, sample_style='choice'), RandomFlip()]
[01/11 16:56:58] detectron2.data.build INFO: Using training sampler TrainingSampler
[01/11 16:56:59] fvcore.common.checkpoint INFO: Loading checkpoint from https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
[01/11 16:56:59] fvcore.common.file_io INFO: URL https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth cached in /home/stevekang/.torch/fvcore_cache/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
[01/11 16:57:00] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.0' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 16:57:00] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.1' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 16:57:00] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.2' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 16:57:00] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.3' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 16:57:00] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.4' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 16:57:00] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.objectness_logits.weight' has shape (3, 256, 1, 1) in the checkpoint but (5, 256, 1, 1) in the model! Skipped.
[01/11 16:57:00] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.objectness_logits.bias' has shape (3,) in the checkpoint but (5,) in the model! Skipped.
[01/11 16:57:00] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.anchor_deltas.weight' has shape (12, 256, 1, 1) in the checkpoint but (20, 256, 1, 1) in the model! Skipped.
[01/11 16:57:00] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.anchor_deltas.bias' has shape (12,) in the checkpoint but (20,) in the model! Skipped.
[01/11 16:57:00] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.0.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 16:57:00] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.0.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 16:57:00] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.1.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 16:57:00] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.1.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 16:57:00] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.2.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 16:57:00] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.2.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 16:57:00] fvcore.common.checkpoint WARNING: 'roi_heads.mask_head.predictor.weight' has shape (80, 256, 1, 1) in the checkpoint but (1, 256, 1, 1) in the model! Skipped.
[01/11 16:57:00] fvcore.common.checkpoint WARNING: 'roi_heads.mask_head.predictor.bias' has shape (80,) in the checkpoint but (1,) in the model! Skipped.
[01/11 16:57:00] fvcore.common.checkpoint INFO: Some model parameters are not in the checkpoint:
  [34mroi_heads.box_predictor.0.cls_score.{weight, bias}[0m
  [34mbackbone.bottom_up.stem.conv1_2.norm.num_batches_tracked[0m
  [34mroi_heads.box_predictor.2.cls_score.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv2.bn0.num_batches_tracked[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{5, 4, 3, 0, 2, 1}[0m
  [34mroi_heads.box_predictor.1.cls_score.{bias, weight}[0m
  [34mbackbone.bottom_up.stem.conv1_1.norm.num_batches_tracked[0m
  [34mroi_heads.mask_head.predictor.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv2.bn1.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.2.conv2.bn0.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.1.conv3.norm.num_batches_tracked[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.2.conv1.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.conv3.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.1.conv2.bn0.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.2.conv3.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.stem.conv1_3.norm.num_batches_tracked[0m
  [34mproposal_generator.rpn_head.objectness_logits.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv2.bn1.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.2.conv2.bn1.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.shortcut.norm.num_batches_tracked[0m
[01/11 16:57:00] detectron2.engine.train_loop INFO: Starting training from iteration 0
[01/11 16:57:58] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fcb80e8c790> to CPU due to CUDA OOM
[01/11 16:58:33] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7fcb80e8c790> to CPU due to CUDA OOM
[01/11 17:02:33] detectron2 INFO: Rank of current process: 1. World size: 8
[01/11 17:02:33] detectron2 INFO: Environment info:
------------------------  ---------------------------------------------------------------------------------------------
sys.platform              linux
Python                    3.10.8 (main, Nov 24 2022, 14:13:03) [GCC 11.2.0]
numpy                     1.23.5
detectron2                0.1.1 @/lunit/home/stevekang/decentAI/cellDetection/new_resnest/detectron2-ResNeSt/detectron2
detectron2 compiler       GCC 5.4
detectron2 CUDA compiler  10.1
detectron2 arch flags     sm_61
DETECTRON2_ENV_MODULE     <not set>
PyTorch                   1.12.0+cu102 @/home/stevekang/anaconda3/envs/resnest/lib/python3.10/site-packages/torch
PyTorch debug build       False
CUDA available            True
GPU 0,1,2,3,4,5,6,7       TITAN Xp
CUDA_HOME                 /usr/local/cuda
NVCC                      Cuda compilation tools, release 10.1, V10.1.243
Pillow                    9.3.0
torchvision               0.13.0+cu102 @/home/stevekang/anaconda3/envs/resnest/lib/python3.10/site-packages/torchvision
torchvision arch flags    sm_35, sm_50, sm_60, sm_70, sm_75
cv2                       4.6.0
------------------------  ---------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[01/11 17:02:33] detectron2 INFO: Command line arguments: Namespace(config_file='tools/mcf.yaml', resume=False, eval_only=False, num_gpus=8, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:51261', opts=[])
[01/11 17:02:33] detectron2 INFO: Contents of args.config_file=tools/mcf.yaml:
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHTS: "https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth"
  BACKBONE:
    NAME: "build_resnet_fpn_backbone"
    FREEZE_AT: 0
  MASK_ON: True
  RESNETS:
    OUT_FEATURES: ["res2", "res3", "res4", "res5"]
    DEPTH: 50
    STRIDE_IN_1X1: False
    RADIX: 2
    DEFORM_ON_PER_STAGE: [False, True, True, True] # on Res3,Res4,Res5
    DEFORM_MODULATED: True
    DEFORM_NUM_GROUPS: 2
    NORM: "SyncBN"

  FPN:
    NORM: "SyncBN"
    IN_FEATURES: ["res2", "res3", "res4", "res5"]
  ANCHOR_GENERATOR:
    SIZES: [[4], [9], [17], [31], [64], [127]]  # One size for each in feature map
    ASPECT_RATIOS: [[0.25, 0.5, 1.0, 2.0, 4.0]]  # Three aspect ratios (same for all in feature maps)
  ROI_HEADS:
    NUM_CLASSES: 1
    BATCH_SIZE_PER_IMAGE: 512
    NAME: CascadeROIHeads
    IN_FEATURES: ["p2", "p3", "p4", "p5"]
  ROI_BOX_HEAD:
    NAME: "FastRCNNConvFCHead"
    NUM_CONV: 4
    NUM_FC: 1
    NORM: "SyncBN"
    POOLER_RESOLUTION: 7
    CLS_AGNOSTIC_BBOX_REG: True
  ROI_MASK_HEAD:
    NUM_CONV: 8
    NORM: "SyncBN"
  RPN:
    IN_FEATURES: ["p2" ,"p2", "p3", "p4", "p5", "p6"]
    BATCH_SIZE_PER_IMAGE: 256
    POST_NMS_TOPK_TEST: 3000
    POST_NMS_TOPK_TRAIN: 3000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
  RETINANET:
    NUM_CLASSES: 1
    TOPK_CANDIDATES_TEST: 3000
  PIXEL_MEAN: [128, 128, 128]
  PIXEL_STD: [11.578, 11.578, 11.578]
SOLVER:
  IMS_PER_BATCH: 8
  BASE_LR: 0.02
  STEPS: (17500, 20000)
  MAX_ITER: 30000
  CHECKPOINT_PERIOD: 500
DATASETS:
  TRAIN: ("MCF7",)  #REPLACE TRAIN WITH THE REGISTERED NAME 
  TEST: ("MCF7",)    #REPLACE TRAIN WITH THE REGISTERED NAME
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
INPUT:
  MIN_SIZE_TRAIN: (440, 480, 520, 560, 580, 620)

  CROP:
    ENABLED: False
  FORMAT: "BGR"
TEST:
  DETECTIONS_PER_IMAGE: 3000 # 1000
  EVAL_PERIOD: 500
  PRECISE_BN:
    ENABLED: False
  AUG:
    ENABLED: False
OUTPUT_DIR: "./output" # PATH TO SAVE THE OUTPUT RESULTS
DATALOADER:
  NUM_WORKERS: 20
VERSION: 2
[01/11 17:02:33] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 20
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('MCF7',)
  TRAIN: ('MCF7',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (440, 480, 520, 560, 580, 620)
  MIN_SIZE_TRAIN_SAMPLING: choice
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.25, 0.5, 1.0, 2.0, 4.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[4], [9], [17], [31], [64], [127]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: SyncBN
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [128, 128, 128]
  PIXEL_STD: [11.578, 11.578, 11.578]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    AVD: False
    AVG_DOWN: False
    BOTTLENECK_WIDTH: 64
    DEEP_STEM: False
    DEFORM_MODULATED: True
    DEFORM_NUM_GROUPS: 2
    DEFORM_ON_PER_STAGE: [False, True, True, True]
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RADIX: 2
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 3000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: True
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: SyncBN
    NUM_CONV: 4
    NUM_FC: 1
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: CascadeROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: SyncBN
    NUM_CONV: 8
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 3000
    POST_NMS_TOPK_TRAIN: 3000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 500
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 30000
  MOMENTUM: 0.9
  STEPS: (17500, 20000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 3000
  EVAL_PERIOD: 500
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/11 17:02:33] detectron2.utils.env INFO: Using a generated random seed 34024388
[01/11 17:02:36] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(
      256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output2): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral3): Conv2d(
      512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output3): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral4): Conv2d(
      1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output4): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral5): Conv2d(
      2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output5): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (dropout): Dropout(p=0.3, inplace=False)
        (conv1_1): Conv2d(
          3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1_2): Conv2d(
          32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1_3): Conv2d(
          32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=1, stride=1, padding=0)
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res4): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (4): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (5): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 5, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (roi_heads): CascadeROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): ModuleList(
      (0): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
      (1): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
      (2): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
    )
    (box_predictor): ModuleList(
      (0): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
      (1): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
      (2): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn5): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn6): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn7): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn8): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[01/11 17:02:39] detectron2.data.datasets.coco INFO: Loading /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json takes 3.48 seconds.
[01/11 17:02:39] detectron2.data.datasets.coco INFO: Loaded 469 images in COCO format from /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json
[01/11 17:02:40] detectron2.data.build INFO: Removed 0 images with no usable annotations. 469 images left.
[01/11 17:02:40] detectron2.data.build INFO: Distribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|    cell    | 212688       |
|            |              |[0m
[01/11 17:02:40] detectron2.data.common INFO: Serializing 469 elements to byte tensors and concatenating them all ...
[01/11 17:02:41] detectron2.data.common INFO: Serialized dataset takes 77.04 MiB
[01/11 17:02:41] detectron2.data.detection_utils INFO: TransformGens used in training: [ResizeShortestEdge(short_edge_length=(440, 480, 520, 560, 580, 620), max_size=1333, sample_style='choice'), RandomFlip()]
[01/11 17:02:41] detectron2.data.build INFO: Using training sampler TrainingSampler
[01/11 17:02:42] fvcore.common.checkpoint INFO: Loading checkpoint from https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
[01/11 17:02:42] fvcore.common.file_io INFO: URL https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth cached in /home/stevekang/.torch/fvcore_cache/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_1.weight' has shape (64, 3, 3, 3) in the checkpoint but (32, 3, 3, 3) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_1.norm.weight' has shape (64,) in the checkpoint but (32,) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_1.norm.bias' has shape (64,) in the checkpoint but (32,) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_1.norm.running_mean' has shape (64,) in the checkpoint but (32,) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_1.norm.running_var' has shape (64,) in the checkpoint but (32,) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_2.weight' has shape (64, 64, 3, 3) in the checkpoint but (32, 32, 3, 3) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_2.norm.weight' has shape (64,) in the checkpoint but (32,) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_2.norm.bias' has shape (64,) in the checkpoint but (32,) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_2.norm.running_mean' has shape (64,) in the checkpoint but (32,) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_2.norm.running_var' has shape (64,) in the checkpoint but (32,) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_3.weight' has shape (128, 64, 3, 3) in the checkpoint but (64, 32, 3, 3) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_3.norm.weight' has shape (128,) in the checkpoint but (64,) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_3.norm.bias' has shape (128,) in the checkpoint but (64,) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_3.norm.running_mean' has shape (128,) in the checkpoint but (64,) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_3.norm.running_var' has shape (128,) in the checkpoint but (64,) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.res2.0.shortcut.weight' has shape (256, 128, 1, 1) in the checkpoint but (256, 64, 1, 1) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.res2.0.conv1.weight' has shape (64, 128, 1, 1) in the checkpoint but (64, 64, 1, 1) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.0' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.1' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.2' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.3' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.4' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.objectness_logits.weight' has shape (3, 256, 1, 1) in the checkpoint but (5, 256, 1, 1) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.objectness_logits.bias' has shape (3,) in the checkpoint but (5,) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.anchor_deltas.weight' has shape (12, 256, 1, 1) in the checkpoint but (20, 256, 1, 1) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.anchor_deltas.bias' has shape (12,) in the checkpoint but (20,) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.0.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.0.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.1.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.1.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.2.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.2.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'roi_heads.mask_head.predictor.weight' has shape (80, 256, 1, 1) in the checkpoint but (1, 256, 1, 1) in the model! Skipped.
[01/11 17:02:42] fvcore.common.checkpoint WARNING: 'roi_heads.mask_head.predictor.bias' has shape (80,) in the checkpoint but (1,) in the model! Skipped.
[01/11 17:02:43] fvcore.common.checkpoint INFO: Some model parameters are not in the checkpoint:
  [34mbackbone.bottom_up.res2.2.conv2.bn1.num_batches_tracked[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{3, 2, 1, 0, 4, 5}[0m
  [34mbackbone.bottom_up.res2.0.shortcut.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.1.conv2.bn0.num_batches_tracked[0m
  [34mroi_heads.box_predictor.2.cls_score.{weight, bias}[0m
  [34mbackbone.bottom_up.stem.conv1_3.norm.{num_batches_tracked, running_var, weight, running_mean, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv2.bn1.num_batches_tracked[0m
  [34mbackbone.bottom_up.stem.conv1_1.weight[0m
  [34mbackbone.bottom_up.stem.conv1_1.norm.{weight, num_batches_tracked, running_mean, bias, running_var}[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.num_batches_tracked[0m
  [34mroi_heads.mask_head.predictor.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv2.bn0.num_batches_tracked[0m
  [34mbackbone.bottom_up.stem.conv1_2.norm.{num_batches_tracked, running_mean, bias, running_var, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv3.norm.num_batches_tracked[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mbackbone.bottom_up.stem.conv1_2.weight[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.2.conv3.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.shortcut.weight[0m
  [34mroi_heads.box_predictor.0.cls_score.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.2.conv2.bn0.num_batches_tracked[0m
  [34mbackbone.bottom_up.stem.conv1_3.weight[0m
  [34mbackbone.bottom_up.res2.2.conv1.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
  [34mroi_heads.box_predictor.1.cls_score.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv3.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.1.conv2.bn1.num_batches_tracked[0m
[01/11 17:02:43] fvcore.common.checkpoint INFO: The checkpoint contains parameters not used by the model:
  [35mbackbone.bottom_up.res3.4.conv1.weight[0m
  [35mbackbone.bottom_up.res3.4.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.4.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.4.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.4.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.4.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.4.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.4.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.4.conv3.weight[0m
  [35mbackbone.bottom_up.res3.4.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.5.conv1.weight[0m
  [35mbackbone.bottom_up.res3.5.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.5.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.5.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.5.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.5.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.5.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.5.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.5.conv3.weight[0m
  [35mbackbone.bottom_up.res3.5.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.6.conv1.weight[0m
  [35mbackbone.bottom_up.res3.6.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.6.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.6.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.6.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.6.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.6.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.6.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.6.conv3.weight[0m
  [35mbackbone.bottom_up.res3.6.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.7.conv1.weight[0m
  [35mbackbone.bottom_up.res3.7.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.7.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.7.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.7.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.7.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.7.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.7.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.7.conv3.weight[0m
  [35mbackbone.bottom_up.res3.7.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.8.conv1.weight[0m
  [35mbackbone.bottom_up.res3.8.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.8.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.8.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.8.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.8.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.8.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.8.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.8.conv3.weight[0m
  [35mbackbone.bottom_up.res3.8.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.9.conv1.weight[0m
  [35mbackbone.bottom_up.res3.9.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.9.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.9.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.9.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.9.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.9.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.9.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.9.conv3.weight[0m
  [35mbackbone.bottom_up.res3.9.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.10.conv1.weight[0m
  [35mbackbone.bottom_up.res3.10.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.10.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.10.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.10.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.10.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.10.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.10.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.10.conv3.weight[0m
  [35mbackbone.bottom_up.res3.10.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.11.conv1.weight[0m
  [35mbackbone.bottom_up.res3.11.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.11.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.11.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.11.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.11.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.11.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.11.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.11.conv3.weight[0m
  [35mbackbone.bottom_up.res3.11.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.12.conv1.weight[0m
  [35mbackbone.bottom_up.res3.12.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.12.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.12.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.12.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.12.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.12.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.12.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.12.conv3.weight[0m
  [35mbackbone.bottom_up.res3.12.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.13.conv1.weight[0m
  [35mbackbone.bottom_up.res3.13.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.13.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.13.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.13.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.13.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.13.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.13.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.13.conv3.weight[0m
  [35mbackbone.bottom_up.res3.13.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.14.conv1.weight[0m
  [35mbackbone.bottom_up.res3.14.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.14.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.14.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.14.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.14.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.14.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.14.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.14.conv3.weight[0m
  [35mbackbone.bottom_up.res3.14.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.15.conv1.weight[0m
  [35mbackbone.bottom_up.res3.15.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.15.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.15.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.15.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.15.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.15.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.15.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.15.conv3.weight[0m
  [35mbackbone.bottom_up.res3.15.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.16.conv1.weight[0m
  [35mbackbone.bottom_up.res3.16.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.16.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.16.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.16.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.16.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.16.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.16.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.16.conv3.weight[0m
  [35mbackbone.bottom_up.res3.16.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.17.conv1.weight[0m
  [35mbackbone.bottom_up.res3.17.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.17.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.17.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.17.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.17.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.17.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.17.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.17.conv3.weight[0m
  [35mbackbone.bottom_up.res3.17.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.18.conv1.weight[0m
  [35mbackbone.bottom_up.res3.18.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.18.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.18.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.18.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.18.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.18.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.18.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.18.conv3.weight[0m
  [35mbackbone.bottom_up.res3.18.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.19.conv1.weight[0m
  [35mbackbone.bottom_up.res3.19.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.19.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.19.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.19.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.19.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.19.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.19.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.19.conv3.weight[0m
  [35mbackbone.bottom_up.res3.19.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.20.conv1.weight[0m
  [35mbackbone.bottom_up.res3.20.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.20.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.20.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.20.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.20.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.20.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.20.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.20.conv3.weight[0m
  [35mbackbone.bottom_up.res3.20.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.21.conv1.weight[0m
  [35mbackbone.bottom_up.res3.21.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.21.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.21.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.21.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.21.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.21.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.21.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.21.conv3.weight[0m
  [35mbackbone.bottom_up.res3.21.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.22.conv1.weight[0m
  [35mbackbone.bottom_up.res3.22.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.22.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.22.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.22.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.22.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.22.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.22.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.22.conv3.weight[0m
  [35mbackbone.bottom_up.res3.22.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.23.conv1.weight[0m
  [35mbackbone.bottom_up.res3.23.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.23.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.23.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.23.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.23.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.23.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.23.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.23.conv3.weight[0m
  [35mbackbone.bottom_up.res3.23.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.6.conv1.weight[0m
  [35mbackbone.bottom_up.res4.6.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.6.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.6.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.6.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.6.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.6.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.6.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.6.conv3.weight[0m
  [35mbackbone.bottom_up.res4.6.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.7.conv1.weight[0m
  [35mbackbone.bottom_up.res4.7.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.7.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.7.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.7.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.7.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.7.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.7.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.7.conv3.weight[0m
  [35mbackbone.bottom_up.res4.7.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.8.conv1.weight[0m
  [35mbackbone.bottom_up.res4.8.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.8.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.8.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.8.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.8.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.8.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.8.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.8.conv3.weight[0m
  [35mbackbone.bottom_up.res4.8.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.9.conv1.weight[0m
  [35mbackbone.bottom_up.res4.9.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.9.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.9.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.9.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.9.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.9.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.9.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.9.conv3.weight[0m
  [35mbackbone.bottom_up.res4.9.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.10.conv1.weight[0m
  [35mbackbone.bottom_up.res4.10.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.10.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.10.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.10.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.10.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.10.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.10.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.10.conv3.weight[0m
  [35mbackbone.bottom_up.res4.10.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.11.conv1.weight[0m
  [35mbackbone.bottom_up.res4.11.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.11.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.11.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.11.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.11.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.11.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.11.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.11.conv3.weight[0m
  [35mbackbone.bottom_up.res4.11.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.12.conv1.weight[0m
  [35mbackbone.bottom_up.res4.12.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.12.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.12.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.12.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.12.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.12.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.12.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.12.conv3.weight[0m
  [35mbackbone.bottom_up.res4.12.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.13.conv1.weight[0m
  [35mbackbone.bottom_up.res4.13.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.13.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.13.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.13.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.13.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.13.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.13.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.13.conv3.weight[0m
  [35mbackbone.bottom_up.res4.13.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.14.conv1.weight[0m
  [35mbackbone.bottom_up.res4.14.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.14.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.14.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.14.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.14.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.14.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.14.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.14.conv3.weight[0m
  [35mbackbone.bottom_up.res4.14.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.15.conv1.weight[0m
  [35mbackbone.bottom_up.res4.15.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.15.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.15.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.15.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.15.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.15.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.15.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.15.conv3.weight[0m
  [35mbackbone.bottom_up.res4.15.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.16.conv1.weight[0m
  [35mbackbone.bottom_up.res4.16.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.16.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.16.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.16.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.16.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.16.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.16.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.16.conv3.weight[0m
  [35mbackbone.bottom_up.res4.16.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.17.conv1.weight[0m
  [35mbackbone.bottom_up.res4.17.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.17.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.17.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.17.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.17.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.17.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.17.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.17.conv3.weight[0m
  [35mbackbone.bottom_up.res4.17.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.18.conv1.weight[0m
  [35mbackbone.bottom_up.res4.18.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.18.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.18.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.18.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.18.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.18.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.18.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.18.conv3.weight[0m
  [35mbackbone.bottom_up.res4.18.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.19.conv1.weight[0m
  [35mbackbone.bottom_up.res4.19.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.19.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.19.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.19.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.19.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.19.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.19.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.19.conv3.weight[0m
  [35mbackbone.bottom_up.res4.19.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.20.conv1.weight[0m
  [35mbackbone.bottom_up.res4.20.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.20.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.20.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.20.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.20.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.20.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.20.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.20.conv3.weight[0m
  [35mbackbone.bottom_up.res4.20.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.21.conv1.weight[0m
  [35mbackbone.bottom_up.res4.21.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.21.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.21.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.21.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.21.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.21.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.21.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.21.conv3.weight[0m
  [35mbackbone.bottom_up.res4.21.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.22.conv1.weight[0m
  [35mbackbone.bottom_up.res4.22.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.22.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.22.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.22.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.22.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.22.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.22.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.22.conv3.weight[0m
  [35mbackbone.bottom_up.res4.22.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.23.conv1.weight[0m
  [35mbackbone.bottom_up.res4.23.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.23.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.23.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.23.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.23.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.23.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.23.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.23.conv3.weight[0m
  [35mbackbone.bottom_up.res4.23.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.24.conv1.weight[0m
  [35mbackbone.bottom_up.res4.24.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.24.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.24.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.24.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.24.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.24.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.24.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.24.conv3.weight[0m
  [35mbackbone.bottom_up.res4.24.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.25.conv1.weight[0m
  [35mbackbone.bottom_up.res4.25.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.25.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.25.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.25.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.25.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.25.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.25.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.25.conv3.weight[0m
  [35mbackbone.bottom_up.res4.25.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.26.conv1.weight[0m
  [35mbackbone.bottom_up.res4.26.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.26.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.26.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.26.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.26.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.26.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.26.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.26.conv3.weight[0m
  [35mbackbone.bottom_up.res4.26.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.27.conv1.weight[0m
  [35mbackbone.bottom_up.res4.27.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.27.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.27.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.27.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.27.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.27.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.27.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.27.conv3.weight[0m
  [35mbackbone.bottom_up.res4.27.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.28.conv1.weight[0m
  [35mbackbone.bottom_up.res4.28.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.28.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.28.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.28.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.28.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.28.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.28.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.28.conv3.weight[0m
  [35mbackbone.bottom_up.res4.28.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.29.conv1.weight[0m
  [35mbackbone.bottom_up.res4.29.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.29.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.29.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.29.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.29.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.29.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.29.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.29.conv3.weight[0m
  [35mbackbone.bottom_up.res4.29.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.30.conv1.weight[0m
  [35mbackbone.bottom_up.res4.30.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.30.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.30.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.30.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.30.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.30.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.30.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.30.conv3.weight[0m
  [35mbackbone.bottom_up.res4.30.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.31.conv1.weight[0m
  [35mbackbone.bottom_up.res4.31.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.31.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.31.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.31.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.31.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.31.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.31.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.31.conv3.weight[0m
  [35mbackbone.bottom_up.res4.31.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.32.conv1.weight[0m
  [35mbackbone.bottom_up.res4.32.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.32.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.32.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.32.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.32.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.32.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.32.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.32.conv3.weight[0m
  [35mbackbone.bottom_up.res4.32.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.33.conv1.weight[0m
  [35mbackbone.bottom_up.res4.33.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.33.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.33.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.33.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.33.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.33.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.33.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.33.conv3.weight[0m
  [35mbackbone.bottom_up.res4.33.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.34.conv1.weight[0m
  [35mbackbone.bottom_up.res4.34.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.34.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.34.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.34.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.34.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.34.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.34.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.34.conv3.weight[0m
  [35mbackbone.bottom_up.res4.34.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.35.conv1.weight[0m
  [35mbackbone.bottom_up.res4.35.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.35.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.35.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.35.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.35.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.35.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.35.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.35.conv3.weight[0m
  [35mbackbone.bottom_up.res4.35.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
[01/11 17:02:43] detectron2.engine.train_loop INFO: Starting training from iteration 0
[01/11 17:07:45] detectron2 INFO: Rank of current process: 1. World size: 8
[01/11 17:07:46] detectron2 INFO: Environment info:
------------------------  ---------------------------------------------------------------------------------------------
sys.platform              linux
Python                    3.10.8 (main, Nov 24 2022, 14:13:03) [GCC 11.2.0]
numpy                     1.23.5
detectron2                0.1.1 @/lunit/home/stevekang/decentAI/cellDetection/new_resnest/detectron2-ResNeSt/detectron2
detectron2 compiler       GCC 5.4
detectron2 CUDA compiler  10.1
detectron2 arch flags     sm_61
DETECTRON2_ENV_MODULE     <not set>
PyTorch                   1.12.0+cu102 @/home/stevekang/anaconda3/envs/resnest/lib/python3.10/site-packages/torch
PyTorch debug build       False
CUDA available            True
GPU 0,1,2,3,4,5,6,7       TITAN Xp
CUDA_HOME                 /usr/local/cuda
NVCC                      Cuda compilation tools, release 10.1, V10.1.243
Pillow                    9.3.0
torchvision               0.13.0+cu102 @/home/stevekang/anaconda3/envs/resnest/lib/python3.10/site-packages/torchvision
torchvision arch flags    sm_35, sm_50, sm_60, sm_70, sm_75
cv2                       4.6.0
------------------------  ---------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[01/11 17:07:46] detectron2 INFO: Command line arguments: Namespace(config_file='tools/mcf.yaml', resume=False, eval_only=False, num_gpus=8, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:51261', opts=[])
[01/11 17:07:46] detectron2 INFO: Contents of args.config_file=tools/mcf.yaml:
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHTS: "https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth"
  BACKBONE:
    NAME: "build_resnet_fpn_backbone"
    FREEZE_AT: 0
  MASK_ON: True
  RESNETS:
    OUT_FEATURES: ["res2", "res3", "res4", "res5"]
    DEPTH: 50
    STRIDE_IN_1X1: False
    RADIX: 2
    DEFORM_ON_PER_STAGE: [False, True, True, True] # on Res3,Res4,Res5
    DEFORM_MODULATED: True
    DEFORM_NUM_GROUPS: 2
    NORM: "SyncBN"

  FPN:
    NORM: "SyncBN"
    IN_FEATURES: ["res2", "res3", "res4", "res5"]
  ANCHOR_GENERATOR:
    SIZES: [[4], [9], [17], [31], [64], [127]]  # One size for each in feature map
    ASPECT_RATIOS: [[0.25, 0.5, 1.0, 2.0, 4.0]]  # Three aspect ratios (same for all in feature maps)
  ROI_HEADS:
    NUM_CLASSES: 1
    BATCH_SIZE_PER_IMAGE: 512
    NAME: CascadeROIHeads
    IN_FEATURES: ["p2", "p3", "p4", "p5"]
  ROI_BOX_HEAD:
    NAME: "FastRCNNConvFCHead"
    NUM_CONV: 4
    NUM_FC: 1
    NORM: "SyncBN"
    POOLER_RESOLUTION: 7
    CLS_AGNOSTIC_BBOX_REG: True
  ROI_MASK_HEAD:
    NUM_CONV: 8
    NORM: "SyncBN"
  RPN:
    IN_FEATURES: ["p2" ,"p2", "p3", "p4", "p5", "p6"]
    BATCH_SIZE_PER_IMAGE: 256
    POST_NMS_TOPK_TEST: 3000
    POST_NMS_TOPK_TRAIN: 3000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
  RETINANET:
    NUM_CLASSES: 1
    TOPK_CANDIDATES_TEST: 3000
  PIXEL_MEAN: [128, 128, 128]
  PIXEL_STD: [11.578, 11.578, 11.578]
SOLVER:
  IMS_PER_BATCH: 8
  BASE_LR: 0.02
  STEPS: (17500, 20000)
  MAX_ITER: 30000
  CHECKPOINT_PERIOD: 500
DATASETS:
  TRAIN: ("MCF7",)  #REPLACE TRAIN WITH THE REGISTERED NAME 
  TEST: ("MCF7",)    #REPLACE TRAIN WITH THE REGISTERED NAME
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
INPUT:
  MIN_SIZE_TRAIN: (440, 480, 520, 560, 580, 620)

  CROP:
    ENABLED: False
  FORMAT: "BGR"
TEST:
  DETECTIONS_PER_IMAGE: 3000 # 1000
  EVAL_PERIOD: 500
  PRECISE_BN:
    ENABLED: False
  AUG:
    ENABLED: False
OUTPUT_DIR: "./output" # PATH TO SAVE THE OUTPUT RESULTS
DATALOADER:
  NUM_WORKERS: 8
VERSION: 2
[01/11 17:07:46] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 8
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('MCF7',)
  TRAIN: ('MCF7',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (440, 480, 520, 560, 580, 620)
  MIN_SIZE_TRAIN_SAMPLING: choice
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.25, 0.5, 1.0, 2.0, 4.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[4], [9], [17], [31], [64], [127]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: SyncBN
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [128, 128, 128]
  PIXEL_STD: [11.578, 11.578, 11.578]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    AVD: False
    AVG_DOWN: False
    BOTTLENECK_WIDTH: 64
    DEEP_STEM: False
    DEFORM_MODULATED: True
    DEFORM_NUM_GROUPS: 2
    DEFORM_ON_PER_STAGE: [False, True, True, True]
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RADIX: 2
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 3000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: True
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: SyncBN
    NUM_CONV: 4
    NUM_FC: 1
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: CascadeROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: SyncBN
    NUM_CONV: 8
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 3000
    POST_NMS_TOPK_TRAIN: 3000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 500
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 30000
  MOMENTUM: 0.9
  STEPS: (17500, 20000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 3000
  EVAL_PERIOD: 500
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/11 17:07:46] detectron2.utils.env INFO: Using a generated random seed 46190254
[01/11 17:07:48] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(
      256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output2): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral3): Conv2d(
      512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output3): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral4): Conv2d(
      1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output4): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_lateral5): Conv2d(
      2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fpn_output5): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
      (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (dropout): Dropout(p=0.3, inplace=False)
        (conv1_1): Conv2d(
          3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1_2): Conv2d(
          32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1_3): Conv2d(
          32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=1, stride=1, padding=0)
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2): SplAtConv2d(
            (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(128, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res4): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (4): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (5): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=512, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut_avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (avd_layer): AvgPool2d(kernel_size=3, stride=2, padding=1)
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv2_offset): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2)
          (conv2): SplAtConv2d_dcn(
            (conv): ModulatedDeformConv(in_channels=512, out_channels=1024, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=2, deformable_groups=2, bias=False)
            (bn0): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (fc1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
            (bn1): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (fc2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
            (rsoftmax): rSoftMax()
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 5, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (roi_heads): CascadeROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): ModuleList(
      (0): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
      (1): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
      (2): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      )
    )
    (box_predictor): ModuleList(
      (0): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
      (1): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
      (2): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=2, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn5): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn6): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn7): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mask_fcn8): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[01/11 17:07:51] detectron2.data.datasets.coco INFO: Loading /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json takes 3.30 seconds.
[01/11 17:07:51] detectron2.data.datasets.coco INFO: Loaded 469 images in COCO format from /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json
[01/11 17:07:52] detectron2.data.build INFO: Removed 0 images with no usable annotations. 469 images left.
[01/11 17:07:52] detectron2.data.build INFO: Distribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|    cell    | 212688       |
|            |              |[0m
[01/11 17:07:52] detectron2.data.common INFO: Serializing 469 elements to byte tensors and concatenating them all ...
[01/11 17:07:52] detectron2.data.common INFO: Serialized dataset takes 77.04 MiB
[01/11 17:07:52] detectron2.data.detection_utils INFO: TransformGens used in training: [ResizeShortestEdge(short_edge_length=(440, 480, 520, 560, 580, 620), max_size=1333, sample_style='choice'), RandomFlip()]
[01/11 17:07:52] detectron2.data.build INFO: Using training sampler TrainingSampler
[01/11 17:07:54] fvcore.common.checkpoint INFO: Loading checkpoint from https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
[01/11 17:07:54] fvcore.common.file_io INFO: URL https://s3.us-west-1.wasabisys.com/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth cached in /home/stevekang/.torch/fvcore_cache/resnest/detectron/mask_cascade_rcnn_ResNeSt_200_FPN_dcn_syncBN_all_tricks_3x-e1901134.pth
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_1.weight' has shape (64, 3, 3, 3) in the checkpoint but (32, 3, 3, 3) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_1.norm.weight' has shape (64,) in the checkpoint but (32,) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_1.norm.bias' has shape (64,) in the checkpoint but (32,) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_1.norm.running_mean' has shape (64,) in the checkpoint but (32,) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_1.norm.running_var' has shape (64,) in the checkpoint but (32,) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_2.weight' has shape (64, 64, 3, 3) in the checkpoint but (32, 32, 3, 3) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_2.norm.weight' has shape (64,) in the checkpoint but (32,) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_2.norm.bias' has shape (64,) in the checkpoint but (32,) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_2.norm.running_mean' has shape (64,) in the checkpoint but (32,) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_2.norm.running_var' has shape (64,) in the checkpoint but (32,) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_3.weight' has shape (128, 64, 3, 3) in the checkpoint but (64, 32, 3, 3) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_3.norm.weight' has shape (128,) in the checkpoint but (64,) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_3.norm.bias' has shape (128,) in the checkpoint but (64,) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_3.norm.running_mean' has shape (128,) in the checkpoint but (64,) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.stem.conv1_3.norm.running_var' has shape (128,) in the checkpoint but (64,) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.res2.0.shortcut.weight' has shape (256, 128, 1, 1) in the checkpoint but (256, 64, 1, 1) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'backbone.bottom_up.res2.0.conv1.weight' has shape (64, 128, 1, 1) in the checkpoint but (64, 64, 1, 1) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.0' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.1' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.2' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.3' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'proposal_generator.anchor_generator.cell_anchors.4' has shape (3, 4) in the checkpoint but (5, 4) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.objectness_logits.weight' has shape (3, 256, 1, 1) in the checkpoint but (5, 256, 1, 1) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.objectness_logits.bias' has shape (3,) in the checkpoint but (5,) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.anchor_deltas.weight' has shape (12, 256, 1, 1) in the checkpoint but (20, 256, 1, 1) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'proposal_generator.rpn_head.anchor_deltas.bias' has shape (12,) in the checkpoint but (20,) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.0.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.0.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.1.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.1.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.2.cls_score.weight' has shape (81, 1024) in the checkpoint but (2, 1024) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'roi_heads.box_predictor.2.cls_score.bias' has shape (81,) in the checkpoint but (2,) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'roi_heads.mask_head.predictor.weight' has shape (80, 256, 1, 1) in the checkpoint but (1, 256, 1, 1) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint WARNING: 'roi_heads.mask_head.predictor.bias' has shape (80,) in the checkpoint but (1,) in the model! Skipped.
[01/11 17:07:55] fvcore.common.checkpoint INFO: Some model parameters are not in the checkpoint:
  [34mbackbone.bottom_up.stem.conv1_2.norm.{bias, running_mean, running_var, num_batches_tracked, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv2.bn0.num_batches_tracked[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{5, 2, 3, 1, 0, 4}[0m
  [34mbackbone.bottom_up.res2.0.conv2.bn0.num_batches_tracked[0m
  [34mbackbone.bottom_up.stem.conv1_1.weight[0m
  [34mbackbone.bottom_up.stem.conv1_3.norm.{weight, bias, num_batches_tracked, running_mean, running_var}[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.conv2.bn1.num_batches_tracked[0m
  [34mroi_heads.box_predictor.1.cls_score.{weight, bias}[0m
  [34mbackbone.bottom_up.stem.conv1_1.norm.{running_mean, running_var, weight, bias, num_batches_tracked}[0m
  [34mroi_heads.box_predictor.2.cls_score.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv3.norm.num_batches_tracked[0m
  [34mroi_heads.box_predictor.0.cls_score.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv2.bn1.num_batches_tracked[0m
  [34mroi_heads.mask_head.predictor.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.2.conv1.norm.num_batches_tracked[0m
  [34mproposal_generator.rpn_head.objectness_logits.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.2.conv2.bn0.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res2.2.conv3.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.stem.conv1_3.weight[0m
  [34mbackbone.bottom_up.res2.2.conv2.bn1.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.conv3.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.res2.0.shortcut.norm.num_batches_tracked[0m
  [34mbackbone.bottom_up.stem.conv1_2.weight[0m
[01/11 17:07:55] fvcore.common.checkpoint INFO: The checkpoint contains parameters not used by the model:
  [35mbackbone.bottom_up.res3.4.conv1.weight[0m
  [35mbackbone.bottom_up.res3.4.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.4.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.4.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.4.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.4.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.4.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.4.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.4.conv3.weight[0m
  [35mbackbone.bottom_up.res3.4.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.5.conv1.weight[0m
  [35mbackbone.bottom_up.res3.5.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.5.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.5.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.5.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.5.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.5.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.5.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.5.conv3.weight[0m
  [35mbackbone.bottom_up.res3.5.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.6.conv1.weight[0m
  [35mbackbone.bottom_up.res3.6.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.6.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.6.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.6.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.6.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.6.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.6.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.6.conv3.weight[0m
  [35mbackbone.bottom_up.res3.6.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.7.conv1.weight[0m
  [35mbackbone.bottom_up.res3.7.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.7.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.7.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.7.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.7.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.7.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.7.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.7.conv3.weight[0m
  [35mbackbone.bottom_up.res3.7.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.8.conv1.weight[0m
  [35mbackbone.bottom_up.res3.8.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.8.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.8.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.8.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.8.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.8.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.8.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.8.conv3.weight[0m
  [35mbackbone.bottom_up.res3.8.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.9.conv1.weight[0m
  [35mbackbone.bottom_up.res3.9.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.9.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.9.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.9.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.9.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.9.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.9.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.9.conv3.weight[0m
  [35mbackbone.bottom_up.res3.9.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.10.conv1.weight[0m
  [35mbackbone.bottom_up.res3.10.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.10.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.10.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.10.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.10.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.10.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.10.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.10.conv3.weight[0m
  [35mbackbone.bottom_up.res3.10.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.11.conv1.weight[0m
  [35mbackbone.bottom_up.res3.11.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.11.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.11.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.11.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.11.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.11.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.11.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.11.conv3.weight[0m
  [35mbackbone.bottom_up.res3.11.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.12.conv1.weight[0m
  [35mbackbone.bottom_up.res3.12.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.12.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.12.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.12.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.12.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.12.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.12.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.12.conv3.weight[0m
  [35mbackbone.bottom_up.res3.12.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.13.conv1.weight[0m
  [35mbackbone.bottom_up.res3.13.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.13.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.13.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.13.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.13.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.13.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.13.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.13.conv3.weight[0m
  [35mbackbone.bottom_up.res3.13.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.14.conv1.weight[0m
  [35mbackbone.bottom_up.res3.14.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.14.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.14.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.14.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.14.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.14.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.14.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.14.conv3.weight[0m
  [35mbackbone.bottom_up.res3.14.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.15.conv1.weight[0m
  [35mbackbone.bottom_up.res3.15.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.15.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.15.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.15.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.15.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.15.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.15.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.15.conv3.weight[0m
  [35mbackbone.bottom_up.res3.15.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.16.conv1.weight[0m
  [35mbackbone.bottom_up.res3.16.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.16.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.16.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.16.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.16.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.16.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.16.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.16.conv3.weight[0m
  [35mbackbone.bottom_up.res3.16.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.17.conv1.weight[0m
  [35mbackbone.bottom_up.res3.17.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.17.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.17.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.17.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.17.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.17.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.17.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.17.conv3.weight[0m
  [35mbackbone.bottom_up.res3.17.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.18.conv1.weight[0m
  [35mbackbone.bottom_up.res3.18.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.18.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.18.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.18.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.18.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.18.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.18.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.18.conv3.weight[0m
  [35mbackbone.bottom_up.res3.18.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.19.conv1.weight[0m
  [35mbackbone.bottom_up.res3.19.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.19.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.19.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.19.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.19.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.19.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.19.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.19.conv3.weight[0m
  [35mbackbone.bottom_up.res3.19.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.20.conv1.weight[0m
  [35mbackbone.bottom_up.res3.20.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.20.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.20.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.20.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.20.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.20.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.20.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.20.conv3.weight[0m
  [35mbackbone.bottom_up.res3.20.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.21.conv1.weight[0m
  [35mbackbone.bottom_up.res3.21.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.21.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.21.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.21.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.21.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.21.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.21.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.21.conv3.weight[0m
  [35mbackbone.bottom_up.res3.21.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.22.conv1.weight[0m
  [35mbackbone.bottom_up.res3.22.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.22.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.22.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.22.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.22.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.22.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.22.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.22.conv3.weight[0m
  [35mbackbone.bottom_up.res3.22.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.23.conv1.weight[0m
  [35mbackbone.bottom_up.res3.23.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.23.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.23.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res3.23.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.23.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.23.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res3.23.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res3.23.conv3.weight[0m
  [35mbackbone.bottom_up.res3.23.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.6.conv1.weight[0m
  [35mbackbone.bottom_up.res4.6.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.6.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.6.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.6.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.6.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.6.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.6.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.6.conv3.weight[0m
  [35mbackbone.bottom_up.res4.6.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.7.conv1.weight[0m
  [35mbackbone.bottom_up.res4.7.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.7.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.7.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.7.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.7.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.7.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.7.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.7.conv3.weight[0m
  [35mbackbone.bottom_up.res4.7.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.8.conv1.weight[0m
  [35mbackbone.bottom_up.res4.8.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.8.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.8.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.8.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.8.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.8.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.8.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.8.conv3.weight[0m
  [35mbackbone.bottom_up.res4.8.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.9.conv1.weight[0m
  [35mbackbone.bottom_up.res4.9.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.9.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.9.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.9.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.9.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.9.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.9.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.9.conv3.weight[0m
  [35mbackbone.bottom_up.res4.9.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.10.conv1.weight[0m
  [35mbackbone.bottom_up.res4.10.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.10.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.10.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.10.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.10.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.10.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.10.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.10.conv3.weight[0m
  [35mbackbone.bottom_up.res4.10.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.11.conv1.weight[0m
  [35mbackbone.bottom_up.res4.11.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.11.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.11.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.11.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.11.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.11.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.11.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.11.conv3.weight[0m
  [35mbackbone.bottom_up.res4.11.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.12.conv1.weight[0m
  [35mbackbone.bottom_up.res4.12.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.12.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.12.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.12.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.12.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.12.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.12.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.12.conv3.weight[0m
  [35mbackbone.bottom_up.res4.12.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.13.conv1.weight[0m
  [35mbackbone.bottom_up.res4.13.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.13.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.13.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.13.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.13.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.13.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.13.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.13.conv3.weight[0m
  [35mbackbone.bottom_up.res4.13.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.14.conv1.weight[0m
  [35mbackbone.bottom_up.res4.14.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.14.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.14.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.14.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.14.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.14.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.14.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.14.conv3.weight[0m
  [35mbackbone.bottom_up.res4.14.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.15.conv1.weight[0m
  [35mbackbone.bottom_up.res4.15.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.15.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.15.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.15.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.15.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.15.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.15.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.15.conv3.weight[0m
  [35mbackbone.bottom_up.res4.15.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.16.conv1.weight[0m
  [35mbackbone.bottom_up.res4.16.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.16.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.16.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.16.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.16.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.16.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.16.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.16.conv3.weight[0m
  [35mbackbone.bottom_up.res4.16.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.17.conv1.weight[0m
  [35mbackbone.bottom_up.res4.17.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.17.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.17.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.17.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.17.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.17.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.17.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.17.conv3.weight[0m
  [35mbackbone.bottom_up.res4.17.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.18.conv1.weight[0m
  [35mbackbone.bottom_up.res4.18.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.18.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.18.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.18.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.18.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.18.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.18.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.18.conv3.weight[0m
  [35mbackbone.bottom_up.res4.18.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.19.conv1.weight[0m
  [35mbackbone.bottom_up.res4.19.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.19.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.19.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.19.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.19.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.19.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.19.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.19.conv3.weight[0m
  [35mbackbone.bottom_up.res4.19.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.20.conv1.weight[0m
  [35mbackbone.bottom_up.res4.20.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.20.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.20.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.20.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.20.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.20.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.20.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.20.conv3.weight[0m
  [35mbackbone.bottom_up.res4.20.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.21.conv1.weight[0m
  [35mbackbone.bottom_up.res4.21.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.21.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.21.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.21.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.21.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.21.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.21.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.21.conv3.weight[0m
  [35mbackbone.bottom_up.res4.21.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.22.conv1.weight[0m
  [35mbackbone.bottom_up.res4.22.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.22.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.22.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.22.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.22.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.22.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.22.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.22.conv3.weight[0m
  [35mbackbone.bottom_up.res4.22.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.23.conv1.weight[0m
  [35mbackbone.bottom_up.res4.23.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.23.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.23.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.23.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.23.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.23.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.23.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.23.conv3.weight[0m
  [35mbackbone.bottom_up.res4.23.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.24.conv1.weight[0m
  [35mbackbone.bottom_up.res4.24.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.24.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.24.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.24.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.24.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.24.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.24.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.24.conv3.weight[0m
  [35mbackbone.bottom_up.res4.24.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.25.conv1.weight[0m
  [35mbackbone.bottom_up.res4.25.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.25.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.25.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.25.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.25.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.25.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.25.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.25.conv3.weight[0m
  [35mbackbone.bottom_up.res4.25.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.26.conv1.weight[0m
  [35mbackbone.bottom_up.res4.26.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.26.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.26.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.26.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.26.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.26.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.26.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.26.conv3.weight[0m
  [35mbackbone.bottom_up.res4.26.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.27.conv1.weight[0m
  [35mbackbone.bottom_up.res4.27.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.27.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.27.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.27.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.27.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.27.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.27.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.27.conv3.weight[0m
  [35mbackbone.bottom_up.res4.27.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.28.conv1.weight[0m
  [35mbackbone.bottom_up.res4.28.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.28.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.28.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.28.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.28.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.28.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.28.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.28.conv3.weight[0m
  [35mbackbone.bottom_up.res4.28.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.29.conv1.weight[0m
  [35mbackbone.bottom_up.res4.29.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.29.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.29.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.29.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.29.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.29.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.29.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.29.conv3.weight[0m
  [35mbackbone.bottom_up.res4.29.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.30.conv1.weight[0m
  [35mbackbone.bottom_up.res4.30.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.30.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.30.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.30.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.30.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.30.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.30.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.30.conv3.weight[0m
  [35mbackbone.bottom_up.res4.30.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.31.conv1.weight[0m
  [35mbackbone.bottom_up.res4.31.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.31.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.31.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.31.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.31.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.31.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.31.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.31.conv3.weight[0m
  [35mbackbone.bottom_up.res4.31.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.32.conv1.weight[0m
  [35mbackbone.bottom_up.res4.32.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.32.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.32.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.32.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.32.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.32.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.32.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.32.conv3.weight[0m
  [35mbackbone.bottom_up.res4.32.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.33.conv1.weight[0m
  [35mbackbone.bottom_up.res4.33.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.33.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.33.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.33.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.33.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.33.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.33.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.33.conv3.weight[0m
  [35mbackbone.bottom_up.res4.33.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.34.conv1.weight[0m
  [35mbackbone.bottom_up.res4.34.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.34.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.34.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.34.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.34.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.34.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.34.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.34.conv3.weight[0m
  [35mbackbone.bottom_up.res4.34.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.35.conv1.weight[0m
  [35mbackbone.bottom_up.res4.35.conv1.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.35.conv2_offset.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.35.conv2.conv.weight[0m
  [35mbackbone.bottom_up.res4.35.conv2.bn0.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.35.conv2.fc1.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.35.conv2.bn1.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
  [35mbackbone.bottom_up.res4.35.conv2.fc2.{weight, bias}[0m
  [35mbackbone.bottom_up.res4.35.conv3.weight[0m
  [35mbackbone.bottom_up.res4.35.conv3.norm.{weight, bias, running_mean, running_var, num_batches_tracked}[0m
[01/11 17:07:55] detectron2.engine.train_loop INFO: Starting training from iteration 0
[01/11 17:08:20] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:08:49] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:08:55] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:12:21] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:12:40] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:15:30] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:16:12] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:16:30] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:16:56] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:19:34] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:22:27] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:23:29] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:24:27] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:24:48] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:25:02] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:25:16] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:25:41] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:26:35] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:28:02] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:28:10] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:28:37] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:29:04] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:29:17] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:29:27] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:30:10] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:30:16] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:30:53] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:31:05] detectron2.data.datasets.coco INFO: Loading /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json takes 3.20 seconds.
[01/11 17:31:05] detectron2.data.datasets.coco INFO: Loaded 469 images in COCO format from /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json
[01/11 17:31:06] detectron2.data.common INFO: Serializing 469 elements to byte tensors and concatenating them all ...
[01/11 17:31:06] detectron2.data.common INFO: Serialized dataset takes 77.04 MiB
[01/11 17:31:09] detectron2.evaluation.evaluator INFO: Start inference on 59 images
[01/11 17:31:42] detectron2.evaluation.evaluator INFO: Inference done 11/59. 0.6645 s / img. ETA=0:01:16
[01/11 17:31:47] detectron2.evaluation.evaluator INFO: Inference done 15/59. 0.6425 s / img. ETA=0:01:06
[01/11 17:31:53] detectron2.evaluation.evaluator INFO: Inference done 18/59. 0.6605 s / img. ETA=0:01:04
[01/11 17:31:58] detectron2.evaluation.evaluator INFO: Inference done 21/59. 0.6749 s / img. ETA=0:01:01
[01/11 17:32:04] detectron2.evaluation.evaluator INFO: Inference done 25/59. 0.6686 s / img. ETA=0:00:54
[01/11 17:32:10] detectron2.evaluation.evaluator INFO: Inference done 28/59. 0.6818 s / img. ETA=0:00:50
[01/11 17:32:15] detectron2.evaluation.evaluator INFO: Inference done 34/59. 0.6390 s / img. ETA=0:00:36
[01/11 17:32:20] detectron2.evaluation.evaluator INFO: Inference done 37/59. 0.6461 s / img. ETA=0:00:33
[01/11 17:32:26] detectron2.evaluation.evaluator INFO: Inference done 40/59. 0.6535 s / img. ETA=0:00:29
[01/11 17:32:31] detectron2.evaluation.evaluator INFO: Inference done 44/59. 0.6521 s / img. ETA=0:00:22
[01/11 17:32:37] detectron2.evaluation.evaluator INFO: Inference done 49/59. 0.6424 s / img. ETA=0:00:14
[01/11 17:32:43] detectron2.evaluation.evaluator INFO: Inference done 52/59. 0.6462 s / img. ETA=0:00:10
[01/11 17:32:50] detectron2.evaluation.evaluator INFO: Inference done 56/59. 0.6527 s / img. ETA=0:00:04
[01/11 17:32:54] detectron2.evaluation.evaluator INFO: Total inference time: 0:01:21.751743 (1.513921 s / img per device, on 8 devices)
[01/11 17:32:54] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:34 (0.644618 s / img per device, on 8 devices)
[01/11 17:46:44] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:48:27] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:49:44] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:50:09] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:50:19] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:51:15] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:52:59] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:54:14] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:54:58] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:56:00] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:56:34] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:56:40] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:56:53] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:57:06] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:57:40] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:57:56] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 17:59:05] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:00:36] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:00:45] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:01:06] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:01:12] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:01:29] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:02:49] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:03:38] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:04:27] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:04:52] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:05:17] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:05:32] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:06:14] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:07:11] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:08:17] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:09:06] detectron2.data.datasets.coco INFO: Loading /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json takes 3.31 seconds.
[01/11 18:09:06] detectron2.data.datasets.coco INFO: Loaded 469 images in COCO format from /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json
[01/11 18:09:07] detectron2.data.common INFO: Serializing 469 elements to byte tensors and concatenating them all ...
[01/11 18:09:07] detectron2.data.common INFO: Serialized dataset takes 77.04 MiB
[01/11 18:09:11] detectron2.evaluation.evaluator INFO: Start inference on 59 images
[01/11 18:09:43] detectron2.evaluation.evaluator INFO: Inference done 11/59. 0.6383 s / img. ETA=0:01:11
[01/11 18:09:49] detectron2.evaluation.evaluator INFO: Inference done 15/59. 0.6366 s / img. ETA=0:01:05
[01/11 18:09:56] detectron2.evaluation.evaluator INFO: Inference done 19/59. 0.6671 s / img. ETA=0:01:03
[01/11 18:10:03] detectron2.evaluation.evaluator INFO: Inference done 24/59. 0.6509 s / img. ETA=0:00:52
[01/11 18:10:10] detectron2.evaluation.evaluator INFO: Inference done 28/59. 0.6644 s / img. ETA=0:00:48
[01/11 18:10:15] detectron2.evaluation.evaluator INFO: Inference done 34/59. 0.6279 s / img. ETA=0:00:35
[01/11 18:10:22] detectron2.evaluation.evaluator INFO: Inference done 38/59. 0.6344 s / img. ETA=0:00:30
[01/11 18:10:29] detectron2.evaluation.evaluator INFO: Inference done 42/59. 0.6422 s / img. ETA=0:00:25
[01/11 18:10:34] detectron2.evaluation.evaluator INFO: Inference done 47/59. 0.6342 s / img. ETA=0:00:17
[01/11 18:10:41] detectron2.evaluation.evaluator INFO: Inference done 51/59. 0.6370 s / img. ETA=0:00:11
[01/11 18:10:47] detectron2.evaluation.evaluator INFO: Inference done 55/59. 0.6350 s / img. ETA=0:00:05
[01/11 18:10:52] detectron2.evaluation.evaluator INFO: Inference done 59/59. 0.6327 s / img. ETA=0:00:00
[01/11 18:10:53] detectron2.evaluation.evaluator INFO: Total inference time: 0:01:19.104863 (1.464905 s / img per device, on 8 devices)
[01/11 18:10:53] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:34 (0.632703 s / img per device, on 8 devices)
[01/11 18:25:40] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:25:46] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:26:49] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:27:19] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:28:10] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:29:45] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:30:23] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:30:28] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:30:37] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:33:38] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:34:44] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:36:25] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:38:12] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:39:25] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:40:57] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:41:50] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:42:30] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:43:04] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:43:46] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:45:07] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:46:45] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:47:09] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 18:47:18] detectron2.data.datasets.coco INFO: Loading /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json takes 3.33 seconds.
[01/11 18:47:18] detectron2.data.datasets.coco INFO: Loaded 469 images in COCO format from /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json
[01/11 18:47:19] detectron2.data.common INFO: Serializing 469 elements to byte tensors and concatenating them all ...
[01/11 18:47:20] detectron2.data.common INFO: Serialized dataset takes 77.04 MiB
[01/11 18:47:23] detectron2.evaluation.evaluator INFO: Start inference on 59 images
[01/11 18:47:51] detectron2.evaluation.evaluator INFO: Inference done 11/59. 0.5679 s / img. ETA=0:00:59
[01/11 18:47:56] detectron2.evaluation.evaluator INFO: Inference done 16/59. 0.5608 s / img. ETA=0:00:50
[01/11 18:48:02] detectron2.evaluation.evaluator INFO: Inference done 19/59. 0.5902 s / img. ETA=0:00:51
[01/11 18:48:08] detectron2.evaluation.evaluator INFO: Inference done 25/59. 0.5800 s / img. ETA=0:00:42
[01/11 18:48:14] detectron2.evaluation.evaluator INFO: Inference done 30/59. 0.5736 s / img. ETA=0:00:35
[01/11 18:48:21] detectron2.evaluation.evaluator INFO: Inference done 37/59. 0.5601 s / img. ETA=0:00:25
[01/11 18:48:26] detectron2.evaluation.evaluator INFO: Inference done 41/59. 0.5634 s / img. ETA=0:00:21
[01/11 18:48:32] detectron2.evaluation.evaluator INFO: Inference done 46/59. 0.5627 s / img. ETA=0:00:15
[01/11 18:48:38] detectron2.evaluation.evaluator INFO: Inference done 51/59. 0.5636 s / img. ETA=0:00:09
[01/11 18:48:45] detectron2.evaluation.evaluator INFO: Inference done 56/59. 0.5672 s / img. ETA=0:00:03
[01/11 18:48:47] detectron2.evaluation.evaluator INFO: Total inference time: 0:01:03.708133 (1.179780 s / img per device, on 8 devices)
[01/11 18:48:47] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:30 (0.560420 s / img per device, on 8 devices)
[01/11 19:02:27] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:02:42] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:02:51] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:03:46] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:03:55] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:04:21] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:05:05] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:05:29] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:05:40] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:06:19] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:06:45] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:08:37] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:08:48] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:09:39] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:09:46] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:10:38] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:10:45] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:11:09] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:11:14] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:11:27] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:12:10] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:13:20] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:17:13] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:19:38] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:20:04] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:20:12] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:20:22] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:21:57] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:22:16] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:22:47] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:23:30] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:24:25] detectron2.data.datasets.coco INFO: Loading /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json takes 3.31 seconds.
[01/11 19:24:25] detectron2.data.datasets.coco INFO: Loaded 469 images in COCO format from /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json
[01/11 19:24:26] detectron2.data.common INFO: Serializing 469 elements to byte tensors and concatenating them all ...
[01/11 19:24:26] detectron2.data.common INFO: Serialized dataset takes 77.04 MiB
[01/11 19:24:29] detectron2.evaluation.evaluator INFO: Start inference on 59 images
[01/11 19:24:57] detectron2.evaluation.evaluator INFO: Inference done 11/59. 0.5576 s / img. ETA=0:00:56
[01/11 19:25:03] detectron2.evaluation.evaluator INFO: Inference done 16/59. 0.5507 s / img. ETA=0:00:48
[01/11 19:25:08] detectron2.evaluation.evaluator INFO: Inference done 19/59. 0.5802 s / img. ETA=0:00:50
[01/11 19:25:13] detectron2.evaluation.evaluator INFO: Inference done 24/59. 0.5948 s / img. ETA=0:00:42
[01/11 19:25:19] detectron2.evaluation.evaluator INFO: Inference done 28/59. 0.6038 s / img. ETA=0:00:39
[01/11 19:25:24] detectron2.evaluation.evaluator INFO: Inference done 35/59. 0.5665 s / img. ETA=0:00:27
[01/11 19:25:31] detectron2.evaluation.evaluator INFO: Inference done 40/59. 0.5740 s / img. ETA=0:00:22
[01/11 19:25:37] detectron2.evaluation.evaluator INFO: Inference done 45/59. 0.5677 s / img. ETA=0:00:16
[01/11 19:25:43] detectron2.evaluation.evaluator INFO: Inference done 50/59. 0.5662 s / img. ETA=0:00:10
[01/11 19:25:48] detectron2.evaluation.evaluator INFO: Inference done 55/59. 0.5639 s / img. ETA=0:00:04
[01/11 19:25:53] detectron2.evaluation.evaluator INFO: Total inference time: 0:01:02.811642 (1.163179 s / img per device, on 8 devices)
[01/11 19:25:53] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:30 (0.562705 s / img per device, on 8 devices)
[01/11 19:39:00] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:39:07] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:39:29] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:41:08] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:41:14] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:41:30] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:41:55] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:42:06] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:43:09] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:43:21] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:44:00] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:45:22] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:45:49] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:45:53] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:50:14] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:50:54] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:51:33] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:52:33] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:53:15] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:53:22] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:55:15] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:57:24] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 19:59:14] detectron2.utils.memory INFO: Attempting to copy inputs of <function pairwise_iou at 0x7f20fe744790> to CPU due to CUDA OOM
[01/11 20:02:50] detectron2.data.datasets.coco INFO: Loading /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json takes 3.35 seconds.
[01/11 20:02:50] detectron2.data.datasets.coco INFO: Loaded 469 images in COCO format from /lunit/home/stevekang/decentAI/cellDetection/MCF7/LIVECell_dataset_2021/annotations/LIVECell_single_cells/mcf7/train.json
[01/11 20:02:51] detectron2.data.common INFO: Serializing 469 elements to byte tensors and concatenating them all ...
[01/11 20:02:52] detectron2.data.common INFO: Serialized dataset takes 77.04 MiB
[01/11 20:02:54] detectron2.evaluation.evaluator INFO: Start inference on 59 images
